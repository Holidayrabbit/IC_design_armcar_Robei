module arm_cal_m(
	Clk,
	Rst_n,
	input_cmd,
	data_out,
	send_en_out,
	input_id,
	Tx_Done_flag);

	//---Ports declearation: generated by Robei---
	input Clk;
	input Rst_n;
	input input_cmd;
	output [79:0] data_out;
	output send_en_out;
	input [7:0] input_id;
	input Tx_Done_flag;

	wire Clk;
	wire Rst_n;
	wire input_cmd;
	reg [79:0] data_out;
	reg send_en_out;
	wire [7:0] input_id;
	wire Tx_Done_flag;

	//----Code starts here: integrated by Robei-----
		parameter DATA_WIDTH = 80;
		parameter fill_data = 8'h55;//55
		parameter delta_angle_low = 8'h1a;//每次变化角度5°对1来说太大了1应该就
		parameter delta_angle_heigh = 8'h00;
		reg [DATA_WIDTH-1:0] reg_out_data;
		reg [7:0] angle_low [5:0];
		reg [7:0] angle_heigh [5:0];
		reg [7:0] reg_cal;////////////////
		reg [7:0] med_angle;
		reg [7:0] in_low;
		reg [7:0] in_heigh;
		reg [7:0] reg_id;
		reg [7:0] send_id;
		reg run_valid;
		integer i;
		//时间定义
		reg [7:0] time_low;
		reg [7:0] time_heigh;
		reg reg_input_cmd;
		
		localparam S0 = 0;	//等待发送请求
		localparam S1 = 1;	//计算数据发送
		localparam S2 = 2;	//等待单字节数据发送完成
		localparam S3 = 3;	//检查所有数据是否发送完成
		reg [7:0] Rst_length;
		reg [1:0] state_cal;
		reg [3:0] delay;
		reg done_reg;
		always @(posedge Clk or negedge Rst_n)
		begin
		if (!Rst_n)
			begin
			angle_low[0] <= 8'hE9;
			angle_heigh[0] <= 8'h00;
			angle_low[1] <= 8'hFA;
			angle_heigh[1] <= 8'h01;
			angle_low[2] <= 8'h92;
			angle_heigh[2] <= 8'h00;
			angle_low[3] <= 8'h6a;
			angle_heigh[3] <= 8'h03;
			angle_low[4] <= 8'h08;
			angle_heigh[4] <= 8'h02;
			angle_low[5] <= 8'hF4;
			angle_heigh[5] <= 8'h01;
			med_angle <= 8'h0;
			in_low <= 8'h0;
			in_heigh <= 8'h0;
			reg_id <= 8'h0;
			reg_input_cmd <= 1'h0;
			send_id <= 8'h0;
			state_cal <= S0;
			reg_cal <= 8'h0;
			Rst_length <= 8'h01;
			delay <= 4'h04;
			done_reg <= 1'h0;
			end
		else
			begin
			case(state_cal)
			S0://等待接收
				begin
				if(input_id != 8'h0)
					begin
	                Rst_length <= 8'h01;
					state_cal <= S1;
					reg_id <= input_id;
					reg_input_cmd <= input_cmd;
					time_low = 8'hf4;//高速
	                time_heigh =8'h00; //高速
					end
			    else
					state_cal <= S0;
				end
			S1://分类
				begin
				case(reg_id)
					8'h1://舵机1
						begin
						in_low = angle_low[0];
						in_heigh = angle_heigh[0]; 
						if (reg_input_cmd)  //加法 ??????????阻塞or非阻塞,顺时针
							add_model(in_low,in_heigh,angle_low[0],angle_heigh[0]);
						else 
							sub_model(in_low,in_heigh,angle_low[0],angle_heigh[0]);
						in_low <= angle_low[0];
						in_heigh <= angle_heigh[0]; 
						send_id <= reg_id;
						end
					8'h2://舵机2
						begin
						in_low = angle_low[1];
						in_heigh = angle_heigh[1]; 
						if (reg_input_cmd) 
							add_model(in_low,in_heigh,angle_low[1],angle_heigh[1]);
						else 
							sub_model(in_low,in_heigh,angle_low[1],angle_heigh[1]);
						in_low <= angle_low[1];
						in_heigh <= angle_heigh[1]; 
						send_id <= reg_id;
						end
					8'h3://舵机3
						begin
						in_low = angle_low[2];
						in_heigh = angle_heigh[2]; 
						if (reg_input_cmd)
							add_model(in_low,in_heigh,angle_low[2],angle_heigh[2]);
						else 
							sub_model(in_low,in_heigh,angle_low[2],angle_heigh[2]);
						in_low <= angle_low[2];
						in_heigh <= angle_heigh[2];
						send_id <= reg_id; 
						end
					8'h4://舵机4
						begin
						in_low = angle_low[3];
						in_heigh = angle_heigh[3]; 
						if (reg_input_cmd) 
							add_model(in_low,in_heigh,angle_low[3],angle_heigh[3]);
						else 
							sub_model(in_low,in_heigh,angle_low[3],angle_heigh[3]);
						in_low <= angle_low[3];
						in_heigh <= angle_heigh[3];
						send_id <= reg_id; 
						end
					8'h5://舵机5
						begin
						in_low = angle_low[4];
						in_heigh = angle_heigh[4]; 
						if (reg_input_cmd)
							add_model(in_low,in_heigh,angle_low[4],angle_heigh[4]);
						else 
							sub_model(in_low,in_heigh,angle_low[4],angle_heigh[4]);
						in_low <= angle_low[4];
						in_heigh <= angle_heigh[4];
						send_id <= reg_id; 
						end
					8'h6://舵机6
						begin
						in_low = angle_low[5];
						in_heigh = angle_heigh[5]; 
						if (reg_input_cmd)
							add_model(in_low,in_heigh,angle_low[5],angle_heigh[5]);
						else 
							sub_model(in_low,in_heigh,angle_low[5],angle_heigh[5]);
						in_low <= angle_low[5];
						in_heigh <= angle_heigh[5];
						send_id <= reg_id; 
						end
					8'h7://一步复位
					    begin
	                    send_id <= Rst_length;
	//				        time_low <= 8'h30;
	//                      time_heigh <= 8'h01;
	                    case (Rst_length)
	                        8'h6:
	                            begin
	                            in_low <= 8'hf4;
	                            in_heigh <= 8'h01;
	                            angle_low[5] <= 8'hf4;
	                            angle_heigh[5] <= 8'h01;
	                            end 
	                        8'h5:
	                            begin
	                            in_low <= 8'h08;
	                            in_heigh <= 8'h02;
	                            angle_low[4] <= 8'h08;
	                            angle_heigh[4] <=8'h02;
	                            end 
	                        8'h4:
	                            begin
	                            in_low <= 8'hfe;
	                            in_heigh <= 8'h01;
	                            angle_low[3] <= 8'hfe;
	                            angle_heigh[3] <=8'h01;
	                            end 
	                        8'h3:
	                            begin
	                            in_low <= 8'hfe;
	                            in_heigh <= 8'h01;
	                            angle_low[2] <= 8'hfe;
	                            angle_heigh[2] <=8'h01;
	                            end 
	                        8'h2:
	                            begin
	                            in_low <= 8'hfa;
	                            in_heigh <= 8'h01;
	                            angle_low[1] <= 8'hfa;
	                            angle_heigh[1] <=8'h01;
	                            end 
	                        8'h1://不动抓取
	                            begin
	                            send_id <= 8'h0;
	                            end 
	                        default:	
	                            begin
	                            in_low <= 8'h0;
	                            in_heigh <= 8'h0;
	                            send_id <= 8'h0;
	                            end
	                    endcase
	                    Rst_length <= Rst_length + 8'h1;
					    end
					    /////////////////////////////////////////
				    8'h8://缩姿态
				        begin
				        send_id <= Rst_length;
	                    time_low <= 8'h30;
	                    time_heigh <= 8'h01; 
	                    case (Rst_length)
	                        8'h06:
	                            begin
	                            if (reg_input_cmd)
	                                begin
	                                in_low <= 8'h6e;
	                                in_heigh <= 8'h00;
	                                angle_low[5] <= 8'h6e;
	                                angle_heigh[5] <= 8'h00;
	                                end
	                            else
	                                begin
	                                in_low <= 8'h60;
	                                in_heigh <= 8'h03;
	                                angle_low[5] <= 8'h60;
	                                angle_heigh[5] <= 8'h03;
	                                end
	                            end 
	                        8'h05:
	                            begin
	                            in_low <= 8'h82;
	                            in_heigh <= 8'h00;
	                            angle_low[4] <= 8'h82;
	                            angle_heigh[4] <=8'h00;
	                            end 
	                        8'h04:
	                            begin
	                            in_low <= 8'h44;
	                            in_heigh <= 8'h00;
	                            angle_low[3] <= 8'h44;
	                            angle_heigh[3] <=8'h00;
	                            end 
	                        8'h03:
	                            begin
	                            in_low <= 8'h44;
	                            in_heigh <= 8'h00;
	                            angle_low[2] <= 8'h44;
	                            angle_heigh[2] <= 8'h00;
	                            end 
	                        8'h02:
	                            begin
	                            in_low <= 8'hfa;
	                            in_heigh <= 8'h01;
	                            angle_low[1] <= 8'hfa;
	                            angle_heigh[1] <= 8'h01;
	                            end 
	                        8'h01:
	                            begin
	                            in_low <= 8'hb5;
	                            in_heigh <= 8'h00;
	                            angle_low[0] <= 8'hb5;
	                            angle_heigh[0] <=8'h00;
	                            end 
	                        default:	
	                            send_id <= 8'h07;
	                    endcase
	                    Rst_length <= Rst_length + 8'h1;
				        end
				    8'h9://伸姿态
				        begin
				        send_id <= Rst_length;
	                    time_low <= 8'h30;
	                    time_heigh <= 8'h01; 
	                    case (Rst_length)
	                        8'h6:
	                            begin
	                            if (reg_input_cmd)
	                                begin
	                                in_low <= 8'h6e;
	                                in_heigh <= 8'h00;
	                                angle_low[5] <= 8'h6e;
	                                angle_heigh[5] <=8'h00;
	                                end
	                            else
	                                begin
	                                in_low <= 8'h60;
	                                in_heigh <= 8'h03;
	                                angle_low[5] <= 8'h60;
	                                angle_heigh[5] <=8'h03;
	                                end
	                            end 
	                        8'h5:
	                            begin
	                            in_low <= 8'he6;
	                            in_heigh <= 8'h00;
	                            angle_low[4] <= 8'he6;
	                            angle_heigh[4] <=8'h00;
	                            end 
	                        8'h4:
	                            begin
	                            in_low <= 8'h14;
	                            in_heigh <= 8'h01;
	                            angle_low[3] <= 8'h14;
	                            angle_heigh[3] <=8'h01;
	                            end 
	                        8'h3:
	                            begin
	                            in_low <= 8'he0;
	                            in_heigh <= 8'h00;
	                            angle_low[2] <= 8'he0;
	                            angle_heigh[2] <=8'h00;
	                            end 
	                        8'h2:
	                            begin
	                            in_low <= 8'hfa;
	                            in_heigh <= 8'h01;
	                            angle_low[1] <= 8'hfa;
	                            angle_heigh[1] <=8'h01;
	                            end 
	                        8'h1:
	                            begin
	                            in_low <= 8'hd3;
	                            in_heigh <= 8'h01;
	                            angle_low[0] <= 8'hd3;
	                            angle_heigh[0] <=8'h01;
	                            end 
	                        default:	
	                            send_id <= 8'h07;
	                    endcase
	                    Rst_length <= Rst_length + 8'h1;
				        end
				    8'h0a://鞠躬/抓取姿态
				        begin
				        send_id <= Rst_length;
					    time_low <= 8'h30;
	                    time_heigh <= 8'h03;
	                    case (Rst_length)
	                        8'h5:
	                            begin
	                            in_low <= 8'h38;
	                            in_heigh <= 8'h01;
	                            angle_low[4] <= 8'h38;
	                            angle_heigh[4] <=8'h01;
	                            end 
	                        8'h4:
	                            begin
	                            in_low <= 8'hce;
	                            in_heigh <= 8'h02;
	                            angle_low[3] <= 8'hce;
	                            angle_heigh[3] <=8'h02;
	                            end 
	                        8'h3:
	                            begin
	                            in_low <= 8'hfa;
	                            in_heigh <= 8'h00;
	                            angle_low[2] <= 8'hfa;
	                            angle_heigh[2] <=8'h00;
	                            end 
	                        8'h2:
	                            begin
	                            in_low <= 8'hfa;
	                            in_heigh <= 8'h01;
	                            angle_low[1] <= 8'hfa;
	                            angle_heigh[1] <=8'h01;
	                            end 
	                        default:	
	                            send_id <= 8'h07;
	                    endcase
	                    Rst_length <= Rst_length + 8'h1;
				        end
				    8'h0b://铲人姿态，变时间
				        begin
	                    send_id <= Rst_length;
					    time_low <= 8'h30;
	                    time_heigh <= 8'h03;
	                    case (Rst_length)
	                        8'h6:
	                            begin
	                            in_low <= 8'hf4;
	                            in_heigh <= 8'h01;
	                            angle_low[5] <= 8'hf4;
	                            angle_heigh[5] <= 8'h01;
	                            end 
	                        8'h5:
	                            begin
	                            in_low <= 8'hd0;
	                            in_heigh <= 8'h00;
	                            angle_low[4] <= 8'hd0;
	                            angle_heigh[4] <=8'h00;
	                            end 
	                        8'h4:
	                            begin
	                            in_low <= 8'h84;
	                            in_heigh <= 8'h03;
	                            angle_low[3] <= 8'h84;
	                            angle_heigh[3] <=8'h03;
	                            end 
	                        8'h3:
	                            begin
	                            in_low <= 8'hb4;
	                            in_heigh <= 8'h02;
	                            angle_low[2] <= 8'hb4;
	                            angle_heigh[2] <=8'h02;
	                            end 
	                        8'h2:
	                            begin
	                            in_low <= 8'he0;
	                            in_heigh <= 8'h01;
	                            angle_low[1] <= 8'he0;
	                            angle_heigh[1] <=8'h01;
	                            end 
	                        8'h1:
	                            begin
	                            in_low <= 8'hd3;
	                            in_heigh <= 8'h01;
	                            angle_low[0] <= 8'hd3;
	                            angle_heigh[0] <= 8'h01;
	                            end 
	                        default:	
	                            begin
	                            in_low <= 8'h0;
	                            in_heigh <= 8'h0;
	                            send_id <= 8'h0;
	                            end
	                    endcase
	                    Rst_length <= Rst_length + 8'h1;
					    end
				    8'h0c://远敲击,不动抓取
				        begin
	                    send_id <= Rst_length;
	                    case (Rst_length)
	                        8'h5:
	                            begin
	                            in_low <= 8'h3c;
	                            in_heigh <= 8'h02;
	                            angle_low[4] <= 8'h3c;
	                            angle_heigh[4] <=8'h02;
	                            end 
	                        8'h4:
	                            begin
	                            in_low <= 8'hfe;
	                            in_heigh <= 8'h01;
	                            angle_low[3] <= 8'hfe;
	                            angle_heigh[3] <=8'h01;
	                            end 
	                        8'h3:
	                            begin
	                            in_low <= 8'h3c;
	                            in_heigh <= 8'h02;
	                            angle_low[2] <= 8'h3c;
	                            angle_heigh[2] <=8'h02;
	                            end 
	                        default:	
	                            begin
	                            in_low <= 8'h0;
	                            in_heigh <= 8'h0;
	                            send_id <= 8'h0;
	                            end
	                    endcase
	                    Rst_length <= Rst_length + 8'h1;
					    end
				    8'h0d://肘击，不动抓取，未修改
				        begin
	                    send_id <= Rst_length;
	//				        time_low <= 8'h30;
	//                      time_heigh <= 8'h01;
	                    case (Rst_length)
	                        8'h6:
	                            begin
	                            in_low <= 8'hf4;
	                            in_heigh <= 8'h01;
	                            angle_low[4] <= 8'hf4;
	                            angle_heigh[4] <=8'h01;
	                            end 
	                        8'h5:
	                            begin
	                            in_low <= 8'h1e;
	                            in_heigh <= 8'h01;
	                            angle_low[4] <= 8'h1e;
	                            angle_heigh[4] <=8'h01;
	                            end 
	                        8'h4:
	                            begin
	                            in_low <= 8'hb4;
	                            in_heigh <= 8'h02;
	                            angle_low[3] <= 8'hb4;
	                            angle_heigh[3] <=8'h02;
	                            end 
	                        8'h3:
	                            begin
	                            in_low <= 8'hb8;
	                            in_heigh <= 8'h03;
	                            angle_low[2] <= 8'hb8;
	                            angle_heigh[2] <=8'h03;
	                            end 
	                        default:	
	                            begin
	                            in_low <= 8'h0;
	                            in_heigh <= 8'h0;
	                            send_id <= 8'h0;
	                            end
	                    endcase
	                    Rst_length <= Rst_length + 8'h1;
					    end
					8'h0e://防御姿态
					    begin
	                    send_id <= Rst_length;
	                    case (Rst_length)
	                        8'h6:
	                            begin
	                            if ((angle_low[5] ==8'hf4)&&(angle_heigh[5] <= 8'h01))
	                                begin
	                                in_low <= 8'h72;
	                                in_heigh <= 8'h01;
	                                angle_low[5] <= 8'h72;
	                                angle_heigh[5] <= 8'h01;
	                                end
	                            else if((angle_low[5] ==8'h72)&&(angle_heigh[5] <= 8'h01))
	                                begin
	                                in_low <= 8'h90;
	                                in_heigh <= 8'h02;
	                                angle_low[5] <= 8'h90;
	                                angle_heigh[5] <= 8'h02;
	                                end
	                            else
	                                begin
	                                in_low <= 8'hf4;
	                                in_heigh <= 8'h01;
	                                angle_low[5] <= 8'hf4;
	                                angle_heigh[5] <= 8'h01;
	                                end
	                            end 
	                        8'h5:
	                            begin
	                            in_low <= 8'h0c;
	                            in_heigh <= 8'h03;
	                            angle_low[4] <= 8'h0c;
	                            angle_heigh[4] <=8'h03;
	                            end 
	                        8'h4:
	                            begin
	                            in_low <= 8'h62;
	                            in_heigh <= 8'h01;
	                            angle_low[3] <= 8'h62;
	                            angle_heigh[3] <=8'h01;
	                            end 
	                        8'h3:
	                            begin
	                            in_low <= 8'h78;
	                            in_heigh <= 8'h00;
	                            angle_low[2] <= 8'h78;
	                            angle_heigh[2] <=8'h00;
	                            end 
	                        default:	
	                            begin
	                            in_low <= 8'h0;
	                            in_heigh <= 8'h0;
	                            send_id <= 8'h0;
	                            end
	                    endcase
	                    Rst_length <= Rst_length + 8'h1;
					    end
					default:	
							begin
							in_low <= 8'h0;
							in_heigh <= 8'h0;
							send_id <= 8'h07;
							end
				endcase
				state_cal <= S2;
				end
			S2://发送
				begin
				data_out[79:72] <= fill_data; // 0101 0101
				data_out[71:64] <= fill_data;// 0101 0101
				data_out[63:56] <= send_id;//reg_id
				data_out[55:48] <= 8'h07;//8'h7
				data_out[47:40] <= 8'h01;//8'h1
				data_out[39:32] <= in_low;//in_low
				data_out[31:24] <= in_heigh;//in_heigh
				data_out[23:16] <= time_low;//time_low
				data_out[15:8] <= time_heigh;//time_heigh
				data_out[7:0] = (8'hff-(send_id+8'h07+8'h01+in_heigh+in_low+time_heigh+time_low));//reg_cal
				state_cal <= S3;
				send_en_out <= 1'b1;
				end
			S3://等待发送完毕
				begin
				send_en_out <= 1'b0;
	            if (Tx_Done_flag == 1 | done_reg == 1)
	                begin
	                done_reg <= 1'h1;
	                if (delay == 4'h0)
	                    begin
	                    delay <= 4'h04;
	                    done_reg <= 1'h00;
	                    if (reg_id > 8'h06 && Rst_length != 8'h07)
	                        state_cal <= S1;
	                    else
	                        state_cal <= S0;
	                    end
	                else
	                    delay <= delay - 4'h1;
	                end
	            end
			endcase
			end 
		end
		
	//	reg return_valid;
	//	//返回接受有效信号
	//	always @(posedge Clk or negedge Rst_n)
	//	begin
	//	if(!Rst_n)
	//		return_valid <= 1'b0;
	//	else
	//		begin
	//		if(input_id != 8'h0)
	//			return_valid <= 1'b1;
	//		else
	//			return_valid <= 1'b0;
	//		end
	//	end
		
		task add_model;
			input [7:0] angle_low_tr;
			input [7:0] angle_heigh_tr;
			output [7:0] a_low;
			output [7:0] a_heigh;
			begin//加法 ??????????阻塞or非阻塞
			med_angle = 8'h0;
			a_low = delta_angle_low + angle_low_tr;
			med_angle = angle_heigh_tr;
			if (a_low < angle_low_tr)
				med_angle = angle_heigh_tr + 8'h01;
			a_heigh = med_angle + delta_angle_heigh;
			med_angle = 8'h0;
			end
		endtask
		
		task sub_model;
			input [7:0] angle_low_tr;
			input [7:0] angle_heigh_tr;
			output [7:0] a_low;
			output [7:0] a_heigh;
			begin
			med_angle = 8'h0;
			if (angle_heigh_tr < delta_angle_heigh)
			begin
			  a_low = 8'h0; 
			  a_heigh = 8'h0;
			end
			else
			begin
			  if (delta_angle_low <= angle_low_tr)
			  begin
				 a_low = angle_low_tr - delta_angle_low;
				 a_heigh = angle_heigh_tr - delta_angle_heigh;
		      end
			  else 
			  begin
				 if (angle_heigh_tr == delta_angle_heigh)
				 begin
				     a_low = 8'h0; 
				     a_heigh = 8'h0;
				 end
				 else
				 begin
				     a_heigh = angle_heigh_tr - delta_angle_heigh - 8'h1;
				     a_low = ~(delta_angle_low-angle_low_tr)+8'h1;
				 end
			  end
			end
	
	   		end
		endtask 
endmodule    //arm_cal_m

