module CSB_drive(
	clk,
	rst_n,
	Echo,
	trig,
	data);

	//---Ports declearation: generated by Robei---
	input clk;
	input rst_n;
	input Echo;
	output trig;
	output [15:0] data;

	wire clk;
	wire rst_n;
	wire Echo;
	reg trig;
	reg [15:0] data;

	//----Code starts here: integrated by Robei-----
	//generate cnt_17K_en
	//单比特跨时钟域处理，延时两拍
	reg [2:0] Echo_delay;
	always @ (posedge clk or negedge rst_n)begin
			if(!rst_n)begin
	  			Echo_delay <= 1'd0;
			end
			else begin
					Echo_delay <= {Echo_delay[1:0],Echo}; //让Echo_delay的高位溢出，低位依次变成接收到的Echo
			end
	end 
	//检测上升沿下降沿
	wire nege_Echo;
	wire pose_Echo;
	assign pose_Echo = (~Echo_delay[2])&&Echo_delay[1];
	assign nege_Echo = Echo_delay[2]&&(!Echo_delay[1]);
	
	//产生计数使能信号，高电平期间开始计数，低电平期间停止计数
	reg cnt_17K_en;
	always @ (posedge clk or negedge rst_n)
	begin
	 if(!rst_n)
	  cnt_17K_en <= 1'd0;
	 else 
	  if(pose_Echo)
	   cnt_17K_en <= 1'b1;
	  else 
	   if(nege_Echo)
	    cnt_17K_en <= 1'b0;
	   else 
	    cnt_17K_en <= cnt_17K_en;
	end
	
	
	//产生17KHz计数器
	reg [10:0] cnt_17K;
	always @ (posedge clk or negedge rst_n)
	begin
	 if(!rst_n)
	  cnt_17K <= 1'd0;
	 else 
	  if(cnt_17K_en)
	   begin
	    if(cnt_17K == 11'd1961)
	    //if(cnt_17K == 11'd19)
	     cnt_17K <= 1'd0;
	          else 
	           cnt_17K <= cnt_17K + 1'b1;
	   end
	  else 
	   cnt_17K <= 1'd0;
	end 
	
	//产生17KHz时钟
	reg clk_17K;
	always @ (posedge clk or negedge rst_n)
	begin
	 if(!rst_n)
	  clk_17K <= 1'b0;
	 else 
	  if(cnt_17K == 11'd1961)
	   // if(cnt_17K == 11'd19)
	   clk_17K <= 1'b1;
	  else 
	   clk_17K <= 1'b0;
	end
	
	//产生500ms计数器
	reg [22:0] cnt_500Ms;
	always @ (posedge clk or negedge rst_n)
	begin
	 if(!rst_n)
	  cnt_500Ms <= 1'b0;
	 else 
	   if(cnt_500Ms == 23'd8333333) //500ms
	   //if(cnt_500Ms == 23'd5000)
	   cnt_500Ms <= 1'd0;
	  else 
	   cnt_500Ms <= cnt_500Ms + 1'b1;
	end
	
	//产生10us高电平的脉冲
	always @ (posedge clk or negedge rst_n)
	begin
	 if(!rst_n)
	  trig <= 1'b0;
	 else 
	   if(cnt_500Ms <= 23'd333) 
	   //if(cnt_500Ms <= 23'd3)
	   trig <= 1'b1; //trig信号用于触发模块开始工作
	  else 
	   trig <= 1'b0;
	end 
	
	//显示部分，使用计数器进行计数（17KHz）
	reg [15:0] data_r;
	always @ (posedge clk or negedge rst_n)
	begin
	 if(!rst_n)
	  data_r <= 1'd0;
	 else 
	  if(clk_17K == 1'b1)
	   begin
	    if(data_r[3 :0 ] == 4'd9)
	     begin
	      data_r[7 :4 ] <= 1'b1 + data_r[7 :4 ];
	      data_r[3 :0 ] <= 1'd0;
	     end 
	    else 
	     if(data_r[7 :4 ] == 4'd9)
	      begin
	       data_r[11:8 ] <= 1'b1 + data_r[11:8 ];
	       data_r[7 :4 ] <= 1'd0;
	      end 
	     else 
	      if(data_r[11:8 ] == 4'd9)
	       begin
	        data_r[15:12] <= 1'b1 + data_r[15:12];
	        data_r[11:8 ] <= 1'd0;
	       end 
	      else 
	       data_r <= data_r + 1'b1;
	   end 
	  else 
	   if(cnt_500Ms == 23'd8333333)
	   //if(cnt_500Ms == 23'd5000)
	    data_r <= 1'd0;
	   else
	    data_r <= data_r;
	end 
	
	
	always @ (posedge clk or negedge rst_n)
	begin
	 if(!rst_n)
	  data <= 1'd0;
	 else 
	   if(cnt_500Ms == 23'd8333332)
	   //if(cnt_500Ms == 23'd4999)
	   data <= data_r;
	  else 
	   data <= data ;
	end 
	
	
	
	
endmodule    //CSB_drive

