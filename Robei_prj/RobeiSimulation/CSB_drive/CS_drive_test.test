<!DOCTYPE Robei>
<Module Include="" Time_Scale="" X="0" Y="0" Name="CS_drive_test" Color="#d3d3d3" Type="testbench" Class="module" Comment="" Height="600" Width="900" Parent="0" File="Current/CS_drive_test.test" Code="initial begin&#xa;    sys_clk &lt;= 0;&#xa;    sys_rst_n &lt;= 0;&#xa;    i_echo &lt;= 0;&#xa;    #20&#xa;    sys_rst_n &lt;= 1;&#xa;    #2000&#xa;    i_echo &lt;= 1;&#xa;    #30000&#xa;    i_echo &lt;= 0;&#xa;    $finish;&#xa;end&#xa;&#xa;&#xa;always #10 sys_clk &lt;= ~sys_clk;&#xa;&#xa;&#xa;">
 <Module Include="" X="349.358" Y="169.771" Name="CSB_drive1" Color="#d3d3d3" Type="model" Class="CSB_drive" Comment="" Parameters="" Height="160" Width="160" Parent="CS_drive_test" File="Current/CSB_drive.model" Code="//generate cnt_17K_en&#xa;//单比特跨时钟域处理，延时两拍&#xa;reg [2:0] Echo_delay;&#xa;always @ (posedge clk or negedge rst_n)begin&#xa;&#x9;&#x9;if(!rst_n)begin&#xa;  &#x9;&#x9;&#x9;Echo_delay &lt;= 1'd0;&#xa;&#x9;&#x9;end&#xa;&#x9;&#x9;else begin&#xa;&#x9;&#x9;&#x9;&#x9;Echo_delay &lt;= {Echo_delay[1:0],Echo}; //让Echo_delay的高位溢出，低位依次变成接收到的Echo&#xa;&#x9;&#x9;end&#xa;end &#xa;//检测上升沿下降沿&#xa;wire nege_Echo;&#xa;wire pose_Echo;&#xa;assign pose_Echo = (~Echo_delay[2])&amp;&amp;Echo_delay[1];&#xa;assign nege_Echo = Echo_delay[2]&amp;&amp;(!Echo_delay[1]);&#xa;&#xa;//产生计数使能信号，高电平期间开始计数，低电平期间停止计数&#xa;reg cnt_17K_en;&#xa;always @ (posedge clk or negedge rst_n)&#xa;begin&#xa; if(!rst_n)&#xa;  cnt_17K_en &lt;= 1'd0;&#xa; else &#xa;  if(pose_Echo)&#xa;   cnt_17K_en &lt;= 1'b1;&#xa;  else &#xa;   if(nege_Echo)&#xa;    cnt_17K_en &lt;= 1'b0;&#xa;   else &#xa;    cnt_17K_en &lt;= cnt_17K_en;&#xa;end&#xa;&#xa;&#xa;//产生17KHz计数器&#xa;reg [10:0] cnt_17K;&#xa;always @ (posedge clk or negedge rst_n)&#xa;begin&#xa; if(!rst_n)&#xa;  cnt_17K &lt;= 1'd0;&#xa; else &#xa;  if(cnt_17K_en)&#xa;   begin&#xa;    if(cnt_17K == 11'd1961)&#xa;    //if(cnt_17K == 11'd19)&#xa;     cnt_17K &lt;= 1'd0;&#xa;          else &#xa;           cnt_17K &lt;= cnt_17K + 1'b1;&#xa;   end&#xa;  else &#xa;   cnt_17K &lt;= 1'd0;&#xa;end &#xa;&#xa;//产生17KHz时钟&#xa;reg clk_17K;&#xa;always @ (posedge clk or negedge rst_n)&#xa;begin&#xa; if(!rst_n)&#xa;  clk_17K &lt;= 1'b0;&#xa; else &#xa;  if(cnt_17K == 11'd1961)&#xa;   // if(cnt_17K == 11'd19)&#xa;   clk_17K &lt;= 1'b1;&#xa;  else &#xa;   clk_17K &lt;= 1'b0;&#xa;end&#xa;&#xa;//产生500ms计数器&#xa;reg [22:0] cnt_500Ms;&#xa;always @ (posedge clk or negedge rst_n)&#xa;begin&#xa; if(!rst_n)&#xa;  cnt_500Ms &lt;= 1'b0;&#xa; else &#xa;   if(cnt_500Ms == 23'd8333333) //500ms&#xa;   //if(cnt_500Ms == 23'd5000)&#xa;   cnt_500Ms &lt;= 1'd0;&#xa;  else &#xa;   cnt_500Ms &lt;= cnt_500Ms + 1'b1;&#xa;end&#xa;&#xa;//产生10us高电平的脉冲&#xa;always @ (posedge clk or negedge rst_n)&#xa;begin&#xa; if(!rst_n)&#xa;  trig &lt;= 1'b0;&#xa; else &#xa;   if(cnt_500Ms &lt;= 23'd333) &#xa;   //if(cnt_500Ms &lt;= 23'd3)&#xa;   trig &lt;= 1'b1; //trig信号用于触发模块开始工作&#xa;  else &#xa;   trig &lt;= 1'b0;&#xa;end &#xa;&#xa;//显示部分，使用计数器进行计数（17KHz）&#xa;reg [15:0] data_r;&#xa;always @ (posedge clk or negedge rst_n)&#xa;begin&#xa; if(!rst_n)&#xa;  data_r &lt;= 1'd0;&#xa; else &#xa;  if(clk_17K == 1'b1)&#xa;   begin&#xa;    if(data_r[3 :0 ] == 4'd9)&#xa;     begin&#xa;      data_r[7 :4 ] &lt;= 1'b1 + data_r[7 :4 ];&#xa;      data_r[3 :0 ] &lt;= 1'd0;&#xa;     end &#xa;    else &#xa;     if(data_r[7 :4 ] == 4'd9)&#xa;      begin&#xa;       data_r[11:8 ] &lt;= 1'b1 + data_r[11:8 ];&#xa;       data_r[7 :4 ] &lt;= 1'd0;&#xa;      end &#xa;     else &#xa;      if(data_r[11:8 ] == 4'd9)&#xa;       begin&#xa;        data_r[15:12] &lt;= 1'b1 + data_r[15:12];&#xa;        data_r[11:8 ] &lt;= 1'd0;&#xa;       end &#xa;      else &#xa;       data_r &lt;= data_r + 1'b1;&#xa;   end &#xa;  else &#xa;   if(cnt_500Ms == 23'd8333333)&#xa;   //if(cnt_500Ms == 23'd5000)&#xa;    data_r &lt;= 1'd0;&#xa;   else&#xa;    data_r &lt;= data_r;&#xa;end &#xa;&#xa;&#xa;always @ (posedge clk or negedge rst_n)&#xa;begin&#xa; if(!rst_n)&#xa;  data &lt;= 1'd0;&#xa; else &#xa;   if(cnt_500Ms == 23'd8333332)&#xa;   //if(cnt_500Ms == 23'd4999)&#xa;   data &lt;= data_r;&#xa;  else &#xa;   data &lt;= data ;&#xa;end &#xa;&#xa;&#xa;&#xa;">
  <Port Datatype="wire" X="-0.125" Y="0.1375" Name="clk" Color="#faebd7" Datasize="1" Connect="" Height="20" Width="20" Function="" Parent="CSB_drive1" Inout="input" Side="left"/>
  <Port Datatype="wire" X="-0.125" Y="0.3375" Name="rst_n" Color="#00ffff" Datasize="1" Connect="" Height="20" Width="20" Function="" Parent="CSB_drive1" Inout="input" Side="left"/>
  <Port Datatype="wire" X="-0.125" Y="0.5375" Name="Echo" Color="#7fffd4" Datasize="1" Connect="" Height="20" Width="20" Function="" Parent="CSB_drive1" Inout="input" Side="left"/>
  <Port Datatype="reg" X="0.875" Y="0.1875" Name="trig" Color="#f0ffff" Datasize="1" Connect="" Height="20" Width="20" Function="" Parent="CSB_drive1" Inout="output" Side="right"/>
  <Port Datatype="reg" X="0.875" Y="0.4375" Name="data" Color="#f5f5dc" Datasize="16" Connect="" Height="20" Width="20" Function="" Parent="CSB_drive1" Inout="output" Side="right"/>
 </Module>
 <Port Datatype="reg" X="-0.0222222" Y="0.183333" Name="sys_clk" Color="#faebd7" Datasize="1" Height="20" Width="20" Function="" Parent="CS_drive_test" Inout="input" Side="left"/>
 <Port Datatype="reg" X="-0.0222222" Y="0.383333" Name="sys_rst_n" Color="#00ffff" Datasize="1" Height="20" Width="20" Function="" Parent="CS_drive_test" Inout="input" Side="left"/>
 <Port Datatype="reg" X="-0.0222222" Y="0.583333" Name="i_echo" Color="#7fffd4" Datasize="1" Height="20" Width="20" Function="" Parent="CS_drive_test" Inout="input" Side="left"/>
 <Port Datatype="wire" X="0.977778" Y="0.233333" Name="o_trig" Color="#f0ffff" Datasize="1" Height="20" Width="20" Function="" Parent="CS_drive_test" Inout="output" Side="right"/>
 <Port Datatype="wire" X="0.977778" Y="0.483333" Name="o_s_mm" Color="#f5f5dc" Datasize="16" Height="20" Width="20" Function="" Parent="CS_drive_test" Inout="output" Side="right"/>
 <Wire Datatype="wire" Name="CS_drive_test_sys_clk" Datasize="1" To="CS_drive_test#CSB_drive1>clk" From="CS_drive_test>sys_clk" Parent="CS_drive_test"/>
 <Wire Datatype="wire" Name="CS_drive_test_sys_rst_n" Datasize="1" To="CS_drive_test#CSB_drive1>rst_n" From="CS_drive_test>sys_rst_n" Parent="CS_drive_test"/>
 <Wire Datatype="wire" Name="CSB_drive1_Echo" Datasize="1" To="CS_drive_test>i_echo" From="CS_drive_test#CSB_drive1>Echo" Parent="CS_drive_test"/>
 <Wire Datatype="wire" Name="CSB_drive1_trig" Datasize="1" To="CS_drive_test>o_trig" From="CS_drive_test#CSB_drive1>trig" Parent="CS_drive_test"/>
 <Wire Datatype="wire" Name="CSB_drive1_data" Datasize="16" To="CS_drive_test>o_s_mm" From="CS_drive_test#CSB_drive1>data" Parent="CS_drive_test"/>
</Module>
