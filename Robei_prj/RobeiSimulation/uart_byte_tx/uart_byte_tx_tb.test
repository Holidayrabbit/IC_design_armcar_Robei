<!DOCTYPE Robei>
<Module File="Current/uart_byte_tx_tb.test" Comment="" Time_Scale="" Name="uart_byte_tx_tb" Color="#d3d3d3" X="0" Code="&#x9;&#x9;localparam CLK_PERIOD = 20;&#xa;&#xa;&#x9;initial clk = 1;&#xa;&#x9;always#(CLK_PERIOD/2)clk = ~clk;&#xa;&#x9;&#xa;&#x9;initial begin&#xa;&#x9;&#x9;reset_n = 1'b0;&#xa;&#x9;&#x9;data_byte = 8'd0;&#xa;&#x9;&#x9;send_en = 1'd0;&#xa;&#x9;&#x9;baud_set = 3'd4;&#xa;&#x9;&#x9;#(CLK_PERIOD*500 + 1 )&#xa;&#x9;&#x9;reset_n = 1'b1;&#xa;&#x9;&#x9;#(CLK_PERIOD*50);&#xa;    &#xa;    //send first byte&#xa;&#x9;&#x9;data_byte = 8'haa;&#xa;&#x9;&#x9;send_en = 1'd1;&#xa;&#x9;&#x9;#CLK_PERIOD;&#xa;&#x9;&#x9;send_en = 1'd0;&#xa;&#xa;&#x9;&#x9;@(posedge tx_done)&#xa;&#x9;&#x9;#(CLK_PERIOD*5000);&#xa;    &#xa;    //send second byte&#xa;&#x9;&#x9;data_byte = 8'h55;&#xa;&#x9;&#x9;send_en = 1'd1;&#xa;&#x9;&#x9;#CLK_PERIOD;&#xa;&#x9;&#x9;send_en = 1'd0;&#xa;&#xa;&#x9;&#x9;@(posedge tx_done)&#xa;&#x9;&#x9;#(CLK_PERIOD*5000);&#xa;&#x9;&#x9;$finish;&#x9;&#xa;&#x9;end&#xa;&#xa;&#xa;&#xa;" Class="module" Include="" Parent="0" Type="testbench" Height="600" Y="0" Width="900">
 <Module File="Current/uart_byte_tx.model" Comment="" Name="uart_byte_tx1" Color="#d3d3d3" X="330.526" Code="&#x9;wire reset=~reset_n;&#xa;&#x9;localparam START_BIT = 1'b0;&#xa;&#x9;localparam STOP_BIT = 1'b1; &#xa;&#x9;&#xa;&#x9;reg bps_clk;&#x9;     //波特率时钟&#x9;&#xa;&#x9;reg [15:0]div_cnt;      //分频计数器&#x9;&#xa;&#x9;reg [15:0]bps_DR;       //分频计数最大值&#x9;&#xa;&#x9;reg [3:0]bps_cnt;      //波特率时钟计数器&#x9;&#xa;&#x9;reg [7:0]data_byte_reg;//data_byte寄存后数据&#xa;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;uart_state &lt;= 1'b0;&#xa;&#x9;else if(send_en)&#xa;&#x9;&#x9;uart_state &lt;= 1'b1;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;uart_state &lt;= 1'b0;&#xa;&#x9;else&#xa;&#x9;&#x9;uart_state &lt;= uart_state;&#xa;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;data_byte_reg &lt;= 8'd0;&#xa;&#x9;else if(send_en)&#xa;&#x9;&#x9;data_byte_reg &lt;= data_byte;&#xa;&#x9;else&#xa;&#x9;&#x9;data_byte_reg &lt;= data_byte_reg;&#xa;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;bps_DR &lt;= 16'd5207;&#xa;&#x9;else begin&#xa;&#x9;&#x9;case(baud_set)&#xa;&#x9;&#x9;&#x9;0:bps_DR &lt;= 16'd5207;&#xa;&#x9;&#x9;&#x9;1:bps_DR &lt;= 16'd2603;&#xa;&#x9;&#x9;&#x9;2:bps_DR &lt;= 16'd1301;&#xa;&#x9;&#x9;&#x9;3:bps_DR &lt;= 16'd867;&#xa;&#x9;&#x9;&#x9;4:bps_DR &lt;= 16'd433;&#xa;&#x9;&#x9;&#x9;default:bps_DR &lt;= 16'd5207;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;endcase&#xa;&#x9;end&#x9;&#xa;&#x9;&#xa;&#x9;//counter&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;else if(uart_state)begin&#xa;&#x9;&#x9;if(div_cnt == bps_DR)&#xa;&#x9;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;div_cnt &lt;= div_cnt + 1'b1;&#xa;&#x9;end&#xa;&#x9;else&#xa;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;&#xa;&#x9;// bps_clk gen&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;bps_clk &lt;= 1'b0;&#xa;&#x9;else if(div_cnt == 16'd1)&#xa;&#x9;&#x9;bps_clk &lt;= 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;bps_clk &lt;= 1'b0;&#xa;&#x9;&#xa;&#x9;//bps counter&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#x9;&#xa;&#x9;&#x9;bps_cnt &lt;= 4'd0;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;bps_cnt &lt;= 4'd0;&#xa;&#x9;else if(bps_clk)&#xa;&#x9;&#x9;bps_cnt &lt;= bps_cnt + 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;bps_cnt &lt;= bps_cnt;&#xa;&#x9;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;tx_done &lt;= 1'b0;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;tx_done &lt;= 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;tx_done &lt;= 1'b0;&#xa;&#x9;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;uart_tx &lt;= 1'b1;&#xa;&#x9;else begin&#xa;&#x9;&#x9;case(bps_cnt)&#xa;&#x9;&#x9;&#x9;0:uart_tx &lt;= 1'b1;&#xa;&#x9;&#x9;&#x9;1:uart_tx &lt;= START_BIT;&#xa;&#x9;&#x9;&#x9;2:uart_tx &lt;= data_byte_reg[0];&#xa;&#x9;&#x9;&#x9;3:uart_tx &lt;= data_byte_reg[1];&#xa;&#x9;&#x9;&#x9;4:uart_tx &lt;= data_byte_reg[2];&#xa;&#x9;&#x9;&#x9;5:uart_tx &lt;= data_byte_reg[3];&#xa;&#x9;&#x9;&#x9;6:uart_tx &lt;= data_byte_reg[4];&#xa;&#x9;&#x9;&#x9;7:uart_tx &lt;= data_byte_reg[5];&#xa;&#x9;&#x9;&#x9;8:uart_tx &lt;= data_byte_reg[6];&#xa;&#x9;&#x9;&#x9;9:uart_tx &lt;= data_byte_reg[7];&#xa;&#x9;&#x9;&#x9;10:uart_tx &lt;= STOP_BIT;&#xa;&#x9;&#x9;&#x9;default:uart_tx &lt;= 1'b1;&#xa;&#x9;&#x9;endcase&#xa;&#x9;end&#x9;&#xa;&#xa;&#xa;" Class="uart_byte_tx" Include="" Parent="uart_byte_tx_tb" Type="model" Height="160" Parameters="" Y="218.565" Width="160">
  <Port Datatype="wire" Name="clk" Color="#faebd7" Connect="" X="-0.125" Inout="input" Function="" Parent="uart_byte_tx1" Side="left" Height="20" Y="0.075" Width="20" Datasize="1"/>
  <Port Datatype="wire" Name="reset_n" Color="#00ffff" Connect="" X="-0.125" Inout="input" Function="" Parent="uart_byte_tx1" Side="left" Height="20" Y="0.2125" Width="20" Datasize="1"/>
  <Port Datatype="wire" Name="data_byte" Color="#7fffd4" Connect="" X="-0.125" Inout="input" Function="" Parent="uart_byte_tx1" Side="left" Height="20" Y="0.35" Width="20" Datasize="8"/>
  <Port Datatype="wire" Name="send_en" Color="#f0ffff" Connect="" X="-0.125" Inout="input" Function="" Parent="uart_byte_tx1" Side="left" Height="20" Y="0.4875" Width="20" Datasize="1"/>
  <Port Datatype="wire" Name="baud_set" Color="#f5f5dc" Connect="" X="-0.125" Inout="input" Function="" Parent="uart_byte_tx1" Side="left" Height="20" Y="0.625" Width="20" Datasize="3"/>
  <Port Datatype="reg" Name="uart_tx" Color="#ffe4c4" Connect="" X="0.875" Inout="output" Function="" Parent="uart_byte_tx1" Side="right" Height="20" Y="0.1375" Width="20" Datasize="1"/>
  <Port Datatype="reg" Name="tx_done" Color="#b8860b" Connect="" X="0.875" Inout="output" Function="" Parent="uart_byte_tx1" Side="right" Height="20" Y="0.3375" Width="20" Datasize="1"/>
  <Port Datatype="reg" Name="uart_state" Color="#ffebcd" Connect="" X="0.875" Inout="output" Function="" Parent="uart_byte_tx1" Side="right" Height="20" Y="0.5375" Width="20" Datasize="1"/>
 </Module>
 <Port Datatype="reg" Name="clk" Color="#faebd7" X="-0.0222222" Inout="input" Function="" Parent="uart_byte_tx_tb" Side="left" Height="20" Y="0.125" Width="20" Datasize="1"/>
 <Port Datatype="reg" Name="reset_n" Color="#00ffff" X="-0.0222222" Inout="input" Function="" Parent="uart_byte_tx_tb" Side="left" Height="20" Y="0.266667" Width="20" Datasize="1"/>
 <Port Datatype="reg" Name="data_byte" Color="#7fffd4" X="-0.0222222" Inout="input" Function="" Parent="uart_byte_tx_tb" Side="left" Height="20" Y="0.408333" Width="20" Datasize="8"/>
 <Port Datatype="reg" Name="send_en" Color="#f0ffff" X="-0.0222222" Inout="input" Function="" Parent="uart_byte_tx_tb" Side="left" Height="20" Y="0.55" Width="20" Datasize="1"/>
 <Port Datatype="reg" Name="baud_set" Color="#f5f5dc" X="-0.0222222" Inout="input" Function="" Parent="uart_byte_tx_tb" Side="left" Height="20" Y="0.691667" Width="20" Datasize="3"/>
 <Port Datatype="wire" Name="uart_tx" Color="#ffe4c4" X="0.977778" Inout="output" Function="" Parent="uart_byte_tx_tb" Side="right" Height="20" Y="0.183333" Width="20" Datasize="1"/>
 <Port Datatype="wire" Name="tx_done" Color="#b8860b" X="0.977778" Inout="output" Function="" Parent="uart_byte_tx_tb" Side="right" Height="20" Y="0.383333" Width="20" Datasize="1"/>
 <Port Datatype="wire" Name="uart_state" Color="#ffebcd" X="0.977778" Inout="output" Function="" Parent="uart_byte_tx_tb" Side="right" Height="20" Y="0.583333" Width="20" Datasize="1"/>
 <Wire From="uart_byte_tx_tb>clk" Datatype="wire" Name="uart_byte_tx_tb_clk" Parent="uart_byte_tx_tb" To="uart_byte_tx_tb#uart_byte_tx1>clk" Datasize="1"/>
 <Wire From="uart_byte_tx_tb>reset_n" Datatype="wire" Name="uart_byte_tx_tb_reset_n" Parent="uart_byte_tx_tb" To="uart_byte_tx_tb#uart_byte_tx1>reset_n" Datasize="1"/>
 <Wire From="uart_byte_tx_tb>data_byte" Datatype="wire" Name="uart_byte_tx_tb_data_byte" Parent="uart_byte_tx_tb" To="uart_byte_tx_tb#uart_byte_tx1>data_byte" Datasize="8"/>
 <Wire From="uart_byte_tx_tb>send_en" Datatype="wire" Name="uart_byte_tx_tb_send_en" Parent="uart_byte_tx_tb" To="uart_byte_tx_tb#uart_byte_tx1>send_en" Datasize="1"/>
 <Wire From="uart_byte_tx_tb>baud_set" Datatype="wire" Name="uart_byte_tx_tb_baud_set" Parent="uart_byte_tx_tb" To="uart_byte_tx_tb#uart_byte_tx1>baud_set" Datasize="3"/>
 <Wire From="uart_byte_tx_tb#uart_byte_tx1>uart_tx" Datatype="wire" Name="uart_byte_tx1_uart_tx" Parent="uart_byte_tx_tb" To="uart_byte_tx_tb>uart_tx" Datasize="1"/>
 <Wire From="uart_byte_tx_tb#uart_byte_tx1>tx_done" Datatype="wire" Name="uart_byte_tx1_tx_done" Parent="uart_byte_tx_tb" To="uart_byte_tx_tb>tx_done" Datasize="1"/>
 <Wire From="uart_byte_tx_tb#uart_byte_tx1>uart_state" Datatype="wire" Name="uart_byte_tx1_uart_state" Parent="uart_byte_tx_tb" To="uart_byte_tx_tb>uart_state" Datasize="1"/>
</Module>
