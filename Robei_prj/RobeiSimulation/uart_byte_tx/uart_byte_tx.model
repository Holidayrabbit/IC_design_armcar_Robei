<!DOCTYPE Robei>
<Module Include="" X="0" Width="900" File="Current/uart_byte_tx.model" Height="600" Color="#d3d3d3" Type="module" Code="&#x9;wire reset=~reset_n;&#xa;&#x9;localparam START_BIT = 1'b0;&#xa;&#x9;localparam STOP_BIT = 1'b1; &#xa;&#x9;&#xa;&#x9;reg bps_clk;&#x9;     //波特率时钟&#x9;&#xa;&#x9;reg [15:0]div_cnt;      //分频计数器&#x9;&#xa;&#x9;reg [15:0]bps_DR;       //分频计数最大值&#x9;&#xa;&#x9;reg [3:0]bps_cnt;      //波特率时钟计数器&#x9;&#xa;&#x9;reg [7:0]data_byte_reg;//data_byte寄存后数据&#xa;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;uart_state &lt;= 1'b0;&#xa;&#x9;else if(send_en)&#xa;&#x9;&#x9;uart_state &lt;= 1'b1;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;uart_state &lt;= 1'b0;&#xa;&#x9;else&#xa;&#x9;&#x9;uart_state &lt;= uart_state;&#xa;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;data_byte_reg &lt;= 8'd0;&#xa;&#x9;else if(send_en)&#xa;&#x9;&#x9;data_byte_reg &lt;= data_byte;&#xa;&#x9;else&#xa;&#x9;&#x9;data_byte_reg &lt;= data_byte_reg;&#xa;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;bps_DR &lt;= 16'd5207;&#xa;&#x9;else begin&#xa;&#x9;&#x9;case(baud_set)&#xa;&#x9;&#x9;&#x9;0:bps_DR &lt;= 16'd5207;&#xa;&#x9;&#x9;&#x9;1:bps_DR &lt;= 16'd2603;&#xa;&#x9;&#x9;&#x9;2:bps_DR &lt;= 16'd1301;&#xa;&#x9;&#x9;&#x9;3:bps_DR &lt;= 16'd867;&#xa;&#x9;&#x9;&#x9;4:bps_DR &lt;= 16'd433;&#xa;&#x9;&#x9;&#x9;default:bps_DR &lt;= 16'd5207;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;endcase&#xa;&#x9;end&#x9;&#xa;&#x9;&#xa;&#x9;//counter&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;else if(uart_state)begin&#xa;&#x9;&#x9;if(div_cnt == bps_DR)&#xa;&#x9;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;div_cnt &lt;= div_cnt + 1'b1;&#xa;&#x9;end&#xa;&#x9;else&#xa;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;&#xa;&#x9;// bps_clk gen&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;bps_clk &lt;= 1'b0;&#xa;&#x9;else if(div_cnt == 16'd1)&#xa;&#x9;&#x9;bps_clk &lt;= 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;bps_clk &lt;= 1'b0;&#xa;&#x9;&#xa;&#x9;//bps counter&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#x9;&#xa;&#x9;&#x9;bps_cnt &lt;= 4'd0;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;bps_cnt &lt;= 4'd0;&#xa;&#x9;else if(bps_clk)&#xa;&#x9;&#x9;bps_cnt &lt;= bps_cnt + 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;bps_cnt &lt;= bps_cnt;&#xa;&#x9;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;tx_done &lt;= 1'b0;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;tx_done &lt;= 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;tx_done &lt;= 1'b0;&#xa;&#x9;&#x9;&#xa;&#x9;always@(posedge clk or posedge reset)&#xa;&#x9;if(reset)&#xa;&#x9;&#x9;uart_tx &lt;= 1'b1;&#xa;&#x9;else begin&#xa;&#x9;&#x9;case(bps_cnt)&#xa;&#x9;&#x9;&#x9;0:uart_tx &lt;= 1'b1;&#xa;&#x9;&#x9;&#x9;1:uart_tx &lt;= START_BIT;&#xa;&#x9;&#x9;&#x9;2:uart_tx &lt;= data_byte_reg[0];&#xa;&#x9;&#x9;&#x9;3:uart_tx &lt;= data_byte_reg[1];&#xa;&#x9;&#x9;&#x9;4:uart_tx &lt;= data_byte_reg[2];&#xa;&#x9;&#x9;&#x9;5:uart_tx &lt;= data_byte_reg[3];&#xa;&#x9;&#x9;&#x9;6:uart_tx &lt;= data_byte_reg[4];&#xa;&#x9;&#x9;&#x9;7:uart_tx &lt;= data_byte_reg[5];&#xa;&#x9;&#x9;&#x9;8:uart_tx &lt;= data_byte_reg[6];&#xa;&#x9;&#x9;&#x9;9:uart_tx &lt;= data_byte_reg[7];&#xa;&#x9;&#x9;&#x9;10:uart_tx &lt;= STOP_BIT;&#xa;&#x9;&#x9;&#x9;default:uart_tx &lt;= 1'b1;&#xa;&#x9;&#x9;endcase&#xa;&#x9;end&#x9;&#xa;&#xa;&#xa;" Parent="0" Y="0" Name="uart_byte_tx" Comment="" Class="module" Parameters="">
 <Port Inout="input" X="-0.0222222" Width="20" Height="20" Side="left" Datasize="1" Color="#faebd7" Function="" Parent="uart_byte_tx" Y="0.125" Datatype="wire" Name="clk"/>
 <Port Inout="input" X="-0.0222222" Width="20" Height="20" Side="left" Datasize="1" Color="#00ffff" Function="" Parent="uart_byte_tx" Y="0.266667" Datatype="wire" Name="reset_n"/>
 <Port Inout="input" X="-0.0222222" Width="20" Height="20" Side="left" Datasize="8" Color="#7fffd4" Function="" Parent="uart_byte_tx" Y="0.408333" Datatype="wire" Name="data_byte"/>
 <Port Inout="input" X="-0.0222222" Width="20" Height="20" Side="left" Datasize="1" Color="#f0ffff" Function="" Parent="uart_byte_tx" Y="0.55" Datatype="wire" Name="send_en"/>
 <Port Inout="input" X="-0.0222222" Width="20" Height="20" Side="left" Datasize="3" Color="#f5f5dc" Function="" Parent="uart_byte_tx" Y="0.691667" Datatype="wire" Name="baud_set"/>
 <Port Inout="output" X="0.977778" Width="20" Height="20" Side="right" Datasize="1" Color="#ffe4c4" Function="" Parent="uart_byte_tx" Y="0.183333" Datatype="reg" Name="uart_tx"/>
 <Port Inout="output" X="0.972222" Width="20" Height="20" Side="right" Datasize="1" Color="#b8860b" Function="" Parent="uart_byte_tx" Y="0.41" Datatype="reg" Name="tx_done"/>
 <Port Inout="output" X="0.977778" Width="20" Height="20" Side="right" Datasize="1" Color="#ffebcd" Function="" Parent="uart_byte_tx" Y="0.583333" Datatype="reg" Name="uart_state"/>
</Module>
