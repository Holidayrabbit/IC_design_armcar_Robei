module Core_of_top(
	Read_temp_ok,
	Temp_data,
	CSB_data,
	LM75A_EN,
	BUZZER_EN,
	Clk,
	Rst_n);

	//---Ports declearation: generated by Robei---
	input Read_temp_ok;
	input [10:0] Temp_data;
	input [15:0] CSB_data;
	output LM75A_EN;
	output BUZZER_EN;
	input Clk;
	input Rst_n;

	wire Read_temp_ok;
	wire [10:0] Temp_data;
	wire [15:0] CSB_data;
	reg LM75A_EN;
	reg BUZZER_EN;
	wire Clk;
	wire Rst_n;

	//----Code starts here: integrated by Robei-----
				localparam  Min_distance   = 14'd50;   //±¨¾¯¾àÀë
	
	
				reg [10:0] Temp_data_buffer;
				reg [15:0] CSB_data_buffer;
	
	
				always@(posedge Clk or negedge Rst_n)
				if(!Rst_n)begin
					LM75A_EN <= 0;
					BUZZER_EN <=0 ;
	/*
					LCD_EN <= 0;
					ARM_MOTOR_EN<= 0;
					CSB_EN<= 0;
	*/
				end
	
				else begin
					LM75A_EN <= 1;
	/*
					LCD_EN <= 1;
					ARM_MOTOR_EN <= 1;
					CSB_EN<= 1;
	*/
					Temp_data_buffer<=Temp_data;
					CSB_data_buffer<=CSB_data;
				end
	
	/*
				always@(posedge Clk or negedge Rst_n)    //¶ÁÈ¡ÎÂ¶ÈºÍ³¬Éù²¨
				if(Read_temp_ok)
					begin
					TFT_DISPLAY <={Temp_data_buffer,CSB_data_buffer} ;
					end
				else
					TFT_DISPLAY <={11'd0,CSB_data_buffer} ;
	*/
				always@(posedge Clk or negedge Rst_n)    //·äÃùÆ÷±¨¾¯
				if(!Rst_n)begin
	
					BUZZER_EN <=0 ;
	
	
				end
	
				else if(CSB_data_buffer<=Min_distance)
					begin
					BUZZER_EN <=1 ;
					end
				else
					BUZZER_EN <=0 ;	
	
				
	
endmodule    //Core_of_top

