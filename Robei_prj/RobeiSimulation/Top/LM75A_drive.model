<!DOCTYPE Robei>
<Module Y="0" Type="module" Color="#d3d3d3" Width="900" Code="&#xa;&#xa;&#xa;" X="0" Include="" Height="600" Parameters="" Name="LM75A_drive" File="Current/LM75A_drive.model" Comment="" Parent="0" Class="module">
 <Module Y="89.2568" Type="model" Color="#d3d3d3" Width="160" Code="&#x9;//parameter DELAY=5_000_000;&#xa;&#x9;parameter DELAY=50; //for test&#xa;&#x9;    &#xa;&#x9;    reg [23:0] cnt_delay;&#xa;&#x9;    reg rst_flag;&#xa;&#x9;    &#xa;&#x9;    always@ (posedge Clk or negedge Rst_n)begin&#xa;&#x9;        if(!Rst_n)begin&#xa;&#x9;            cnt_delay&lt;=24'b0;&#xa;&#x9;            Finish&lt;=0;&#xa;&#x9;        end&#xa;&#x9;        else if(LM75A_EN)begin&#xa;&#x9;            if(cnt_delay==DELAY)begin&#xa;&#x9;               Finish&lt;=1'b1; &#xa;&#x9;               cnt_delay&lt;=24'b0;&#xa;&#x9;            end&#xa;&#x9;            else begin&#xa;&#x9;                Finish&lt;=1'b0;&#xa;&#x9;                cnt_delay&lt;=cnt_delay+1;&#xa;&#x9;            end                &#xa;&#x9;         end&#xa;&#x9;         else begin&#xa;&#x9;             Finish&lt;=1'b0;&#xa;&#x9;             cnt_delay&lt;=24'b0;&#xa;&#x9;         end&#xa;&#x9;           &#xa;&#x9;    end&#xa;&#x9;" X="190.608" Include="" Height="160" Parameters="" Name="Read_clock_of_LM75A1" File="Current/Read_clock_of_LM75A.model" Comment="" Parent="LM75A_drive" Class="Read_clock_of_LM75A">
  <Port Connect="" Y="0.1375" Color="#ff0000" Width="20" X="-0.125" Function="" Inout="input" Height="20" Datasize="1" Name="Clk" Side="left" Datatype="wire" Parent="Read_clock_of_LM75A1"/>
  <Port Connect="" Y="0.3375" Color="#ffff00" Width="20" X="-0.125" Function="" Inout="input" Height="20" Datasize="1" Name="Rst_n" Side="left" Datatype="wire" Parent="Read_clock_of_LM75A1"/>
  <Port Connect="" Y="0.5375" Color="#0000ff" Width="20" X="-0.125" Function="" Inout="input" Height="20" Datasize="1" Name="LM75A_EN" Side="left" Datatype="wire" Parent="Read_clock_of_LM75A1"/>
  <Port Connect="" Y="0.26875" Color="#800080" Width="20" X="0.875" Function="" Inout="output" Height="20" Datasize="1" Name="Finish" Side="right" Datatype="reg" Parent="Read_clock_of_LM75A1"/>
 </Module>
 <Module Y="329.459" Type="model" Color="#d3d3d3" Width="160" Code="&#x9;&#xa;&#x9;localparam  lm75a_address=7'b1001_000; &#xa;&#xa;&#xa;&#xa;&#x9;reg [5:0]Cmd;&#xa;&#x9;reg [7:0]Tx_DATA;&#xa;&#x9;wire Trans_Done;&#xa;&#x9;wire ack_o;&#xa;&#x9;reg Go;&#xa;&#xa;&#x9;//buffer for input data or out put data&#xa;&#x9; reg [7:0] temp_out_reg;&#xa;&#x9; reg [7:0] temp_in_Mreg;&#xa;&#x9; reg [7:0] temp_in_Lreg;&#xa;&#x9;&#xa;&#x9;&#xa;&#x9;wire [15:0] reg_addr;&#xa;&#x9;&#xa;&#x9;assign reg_addr = addr_mode?addr:{addr[7:0],addr[15:8]};&#x9;&#x9;&#x9;//仿真记得拉高&#xa;&#x9;&#xa;&#x9;wire [7:0]Rx_DATA;&#xa;&#x9;reg [10:0] data_LM75A; //temperature data&#xa;&#x9;&#xa;&#x9;localparam &#xa;&#x9;&#x9;WR   = 6'b000001,   //写请求&#xa;&#x9;&#x9;STA  = 6'b000010,   //起始位请求&#xa;&#x9;&#x9;RD   = 6'b000100,   //读请求&#xa;&#x9;&#x9;STO  = 6'b001000,   //停止位请求&#xa;&#x9;&#x9;ACK  = 6'b010000,   //应答位请求&#xa;&#x9;&#x9;NACK = 6'b100000;   //无应答请求&#xa;&#xa;&#xa;&#x9;&#xa;&#x9;reg [6:0]state;&#xa;&#x9;reg [7:0]cnt;&#xa;&#x9;&#xa;&#x9;localparam&#xa;&#x9;&#x9;IDLE         = 7'b0000001,   //空闲状态&#xa;&#x9;&#x9;WR_REG       = 7'b0000010,   //写寄存器状态&#xa;&#x9;&#x9;WAIT_WR_DONE = 7'b0000100,   //等待写寄存器完成状态&#xa;&#x9;&#x9;WR_REG_DONE  = 7'b0001000,   //写寄存器完成状态&#xa;&#x9;&#x9;RD_REG       = 7'b0010000,   //读寄存器状态&#xa;&#x9;&#x9;WAIT_RD_DONE = 7'b0100000,   //等待读寄存器完成状态&#xa;&#x9;&#x9;RD_REG_DONE  = 7'b1000000;   //读寄存器完成状态&#xa;&#x9;&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)begin&#xa;&#x9;&#x9;Cmd &lt;= 6'd0;&#xa;&#x9;&#x9;Tx_DATA &lt;= 8'd0;&#xa;&#x9;&#x9;Go &lt;= 1'b0;&#xa;&#x9;&#x9;rddata &lt;= 0;&#xa;&#x9;&#x9;state &lt;= IDLE;&#xa;&#x9;&#x9;ack &lt;= 0;&#xa;&#x9;end&#xa;&#x9;else begin&#xa;&#x9;&#x9;case(state)&#xa;&#x9;&#x9;&#x9;IDLE:&#xa;&#x9;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;cnt &lt;= 0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;ack &lt;= 0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;RW_Done &lt;= 1'b0;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;if(rdreg_req)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= RD_REG;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= IDLE;&#xa;&#x9;&#x9;&#x9;&#x9;end&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;RD_REG:&#xa;&#x9;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= WAIT_RD_DONE;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;case(cnt)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0:write_byte(WR | STA, {lm75a_address,1'b1});&#x9;&#x9;&#x9;//发送lm75a的地址和读信号（1）&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1:read_byte(RD | ACK);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;2:read_byte(RD | NACK | STO);&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;default:;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;endcase&#xa;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;WAIT_RD_DONE:&#xa;&#x9;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;Go &lt;= 1'b0; &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;if(Trans_Done)begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(cnt &lt;= 1)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ack &lt;= ack | ack_o;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;case(cnt)&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;0: begin cnt &lt;= 1; state &lt;= RD_REG;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;1: &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;begin &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp_in_Mreg &lt;= Rx_DATA;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cnt &lt;= 2;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= RD_REG;&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;2: begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp_in_Lreg &lt;= Rx_DATA;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= RD_REG_DONE;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;default:state &lt;= IDLE;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;endcase&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;RD_REG_DONE:&#xa;&#x9;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;RW_Done &lt;= 1'b1;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;if(!temp_in_Mreg[7]) //the value of the temperature data is judged by the highest bit.&#xa;&#x9;                       data_LM75A&lt;={word_in_Mreg,word_in_Lreg[7:5]};&#xa;&#x9;                else&#xa;&#x9;                       data_LM75A&lt;=~{word_in_Mreg,word_in_Lreg[7:5]}+1;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;/*&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;temp_decade&lt;=(data_LM75A>>3)/10; //data_LM75A*125/10000, if(data_LM75A&lt;100)&#x9;&#x9;&#x9;//温度的十位&#xa;&#x9;                    temp_unit&lt;=(data_LM75A>>3)%10;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//温度的个位&#xa;&#x9;                    temp_decimal=(data_LM75A*125/100)%10;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;//温度的小数位&#xa;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;*/&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;rddata &lt;= data_LM75A;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= IDLE;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;default:state &lt;= IDLE;&#xa;&#x9;&#x9;endcase&#xa;&#x9;end&#xa;&#x9;&#xa;&#x9;task read_byte;&#xa;&#x9;&#x9;input [5:0]Ctrl_Cmd;&#xa;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;Cmd &lt;= Ctrl_Cmd;&#xa;&#x9;&#x9;&#x9;Go &lt;= 1'b1; &#xa;&#x9;&#x9;end&#xa;&#x9;endtask&#xa;&#x9;&#xa;&#x9;task write_byte;&#xa;&#x9;&#x9;input [5:0]Ctrl_Cmd;&#xa;&#x9;&#x9;input [7:0]Wr_Byte_Data;&#xa;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;Cmd &lt;= Ctrl_Cmd;&#xa;&#x9;&#x9;&#x9;Tx_DATA &lt;= Wr_Byte_Data;&#xa;&#x9;&#x9;&#x9;Go &lt;= 1'b1; &#xa;&#x9;&#x9;end&#xa;&#x9;endtask&#xa;" X="499.73" Include="0" Height="160" Parameters="" Name="LM75A_i2c_control2" File="Current/LM75A_i2c_control.model" Comment="" Parent="LM75A_drive" Class="LM75A_i2c_control">
  <Port Connect="" Y="0.1375" Color="#faebd7" Width="20" X="-0.125" Function="" Inout="input" Height="20" Datasize="1" Name="Clk" Side="left" Datatype="wire" Parent="LM75A_i2c_control2"/>
  <Port Connect="" Y="0.3375" Color="#00ffff" Width="20" X="-0.125" Function="" Inout="input" Height="20" Datasize="1" Name="Rst_n" Side="left" Datatype="wire" Parent="LM75A_i2c_control2"/>
  <Port Connect="" Y="0.5375" Color="#f0ffff" Width="20" X="-0.125" Function="" Inout="input" Height="20" Datasize="1" Name="rdreg_req" Side="left" Datatype="wire" Parent="LM75A_i2c_control2"/>
  <Port Connect="" Y="0.075" Color="#0000ff" Width="20" X="0.875" Function="" Inout="output" Height="20" Datasize="11" Name="rddata" Side="right" Datatype="reg" Parent="LM75A_i2c_control2"/>
  <Port Connect="" Y="0.2125" Color="#8a2be2" Width="20" X="0.875" Function="" Inout="output" Height="20" Datasize="1" Name="RW_Done" Side="right" Datatype="reg" Parent="LM75A_i2c_control2"/>
  <Port Connect=" " Y="0.35" Color="#a52a2a" Width="20" X="0.875" Function="" Inout="output" Height="20" Datasize="1" Name="ack" Side="right" Datatype="reg" Parent="LM75A_i2c_control2"/>
  <Port Connect="" Y="0.4875" Color="#deb887" Width="20" X="0.875" Function="" Inout="output" Height="20" Datasize="1" Name="i2c_sclk" Side="right" Datatype="wire" Parent="LM75A_i2c_control2"/>
  <Port Connect="" Y="0.625" Color="#5f9ea0" Width="20" X="0.875" Function="" Inout="inout" Height="20" Datasize="1" Name="i2c_sdat" Side="right" Datatype="wire" Parent="LM75A_i2c_control2"/>
 </Module>
 <Port Y="0.183333" Color="#faebd7" Width="20" X="-0.0222222" Function="" Inout="input" Height="20" Datasize="1" Name="Clk" Side="left" Datatype="wire" Parent="LM75A_drive"/>
 <Port Y="0.383333" Color="#00ffff" Width="20" X="-0.0222222" Function="" Inout="input" Height="20" Datasize="1" Name="Rst_n" Side="left" Datatype="wire" Parent="LM75A_drive"/>
 <Port Y="0.583333" Color="#7fffd4" Width="20" X="-0.0222222" Function="" Inout="input" Height="20" Datasize="1" Name="LM75A_EN" Side="left" Datatype="wire" Parent="LM75A_drive"/>
 <Port Y="0.15" Color="#f0ffff" Width="20" X="0.977778" Function="" Inout="output" Height="20" Datasize="11" Name="Temp_data" Side="right" Datatype="wire" Parent="LM75A_drive"/>
 <Port Y="0.316667" Color="#f5f5dc" Width="20" X="0.977778" Function="" Inout="output" Height="20" Datasize="1" Name="Read_temp_en" Side="right" Datatype="wire" Parent="LM75A_drive"/>
 <Port Y="0.483333" Color="#ffe4c4" Width="20" X="0.977778" Function="" Inout="output" Height="20" Datasize="1" Name="SCL" Side="right" Datatype="wire" Parent="LM75A_drive"/>
 <Port Y="0.65" Color="#b8860b" Width="20" X="0.977778" Function="" Inout="inout" Height="20" Datasize="1" Name="SDA" Side="right" Datatype="wire" Parent="LM75A_drive"/>
 <Wire To="LM75A_drive#Read_clock_of_LM75A1>Clk" Datasize="1" Name="LM75A_drive_Clk" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive>Clk"/>
 <Wire To="LM75A_drive#Read_clock_of_LM75A1>Rst_n" Datasize="1" Name="LM75A_drive_Rst_n" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive>Rst_n"/>
 <Wire To="LM75A_drive#Read_clock_of_LM75A1>LM75A_EN" Datasize="1" Name="LM75A_drive_LM75A_EN" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive>LM75A_EN"/>
 <Wire To="LM75A_drive#LM75A_i2c_control2>rdreg_req" Datasize="1" Name="Read_clock_of_LM75A1_Finish" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive#Read_clock_of_LM75A1>Finish"/>
 <Wire To="LM75A_drive>Rst_n" Datasize="1" Name="LM75A_i2c_control2_Rst_n" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive#LM75A_i2c_control2>Rst_n"/>
 <Wire To="LM75A_drive>Clk" Datasize="1" Name="LM75A_i2c_control2_Clk" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive#LM75A_i2c_control2>Clk"/>
 <Wire To="LM75A_drive>Read_temp_en" Datasize="1" Name="LM75A_i2c_control2_RW_Done" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive#LM75A_i2c_control2>RW_Done"/>
 <Wire To="LM75A_drive>Temp_data" Datasize="11" Name="LM75A_i2c_control2_rddata" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive#LM75A_i2c_control2>rddata"/>
 <Wire To="LM75A_drive>SCL" Datasize="1" Name="LM75A_i2c_control2_i2c_sclk" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive#LM75A_i2c_control2>i2c_sclk"/>
 <Wire To="LM75A_drive>SDA" Datasize="1" Name="LM75A_i2c_control2_i2c_sdat" Datatype="wire" Parent="LM75A_drive" From="LM75A_drive#LM75A_i2c_control2>i2c_sdat"/>
</Module>
