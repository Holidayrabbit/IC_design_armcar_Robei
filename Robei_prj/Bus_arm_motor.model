<!DOCTYPE Robei>
<Module Type="module" Height="600" X="0" Y="0" Color="#d3d3d3" Name="Bus_arm_motor" Width="900" Code="&#x9;reg dance_valid;&#xa;    reg[4:0] dance_length;&#xa;    reg [1:0] cmd_flag;&#xa;    reg send_flag;&#xa;&#xa;    reg [7:0] cnt_l;&#xa;    reg [7:0] cnt_m;&#xa;    reg [7:0] cnt_h;&#xa;    reg [3:0] cnt_e;&#xa;&#x9;//----Code starts here: integrated by Robei-----&#xa;&#x9;&#x9;&#x9;/*&#xa;&#x9;&#x9;&#x9;该模块负责串口指令的解析,分别输出对机械臂和电机的指令。&#xa;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;定义串口指令：&#xa;&#x9;&#x9;&#x9;帧头 0x55 和 0xA5 + 器件地址 + 功能码 + 数据（寄存器地址+有效数据） + 帧尾 0xF0   ，一共10字节&#xa;&#x9;&#x9;&#x9;器件地址：机械臂0x00    电机0x34&#xa;&#x9;&#x9;&#x9;功能码：第八位表示读或者写 低四位表示有效数据的长度&#xa;&#x9;&#x9;&#x9;数据：&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;机械臂：XX 00 00 00 00&#x9;&#x9;&#x9;(XX高六位表示转动的舵机，低一位表示转动方向)&#x9;[47:40]&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;电机：&#x9;XX XX XX XX XX&#x9;&#x9;&#x9;（第一个字节表示寄存器地址，后面四个字节表示页写数据）&#xa;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;综上，串口指令协议的长度为 10字节，我们所需做的就是对这10字节数据进行判断。&#xa;&#x9;&#x9;&#x9;只要满足串口指令协议要求（即帧头 0x55+帧头 0xA5+19 字节内容+帧尾 0xF0），便代表是正确的串口指令。&#xa;&#x9;&#x9;&#x9;随后从指令中提取出对应的起始地址、功能码、数据，并产生 cmd 有效信号（cmd_valid），发送个机械臂或者电机驱动模块。&#xa;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;变量解释：&#xa;&#x9;&#x9;&#x9;bus_rx_done（r_rx_done）来自buffer的信号，当buffer发送完毕，该信号变为1&#xa;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;还需补充的内容：&#xa;&#x9;&#x9;&#x9;buffer_empty&#xa;&#x9;&#x9;&#x9;buffer_rd&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;*/&#xa;&#x9;&#x9;&#x9;&#xa;reg [7:0] data_str [9:0];&#x9;&#x9;//将从buffer收到的数据拼接成完整的串口帧&#xa;&#xa;&#xa;always@(posedge Clk) begin&#xa;/*&#xa;    if(buffer_empty)&#x9;&#x9;&#x9;//如果buffer空了就读取无效&#xa;        begin&#xa;        cmd_valid &lt;= #1 0;&#xa;        end&#xa;*/&#xa;&#xa;    if(bus_rx_done)&#xa;        begin&#xa;        //buffer_rd &lt;=  0;&#xa;        data_str[9] &lt;= #1 instruction_data;&#xa;        data_str[8] &lt;= #1 data_str[9];&#xa;        data_str[7] &lt;= #1 data_str[8];           &#xa;        data_str[6] &lt;= #1 data_str[7];&#xa;        data_str[5] &lt;= #1 data_str[6];&#xa;        data_str[4] &lt;= #1 data_str[5];&#xa;        data_str[3] &lt;= #1 data_str[4];&#xa;        data_str[2] &lt;= #1 data_str[3];&#xa;        data_str[1] &lt;= #1 data_str[2];&#xa;        data_str[0] &lt;= #1 data_str[1];&#xa;        //buffer_rd &lt;=  1;&#x9;//读取完一个字节就申请再读一个字节&#xa;    end&#xa;end&#x9;&#x9;&#xa;&#xa;reg r_rx_done;&#xa;&#xa;always@(posedge Clk) begin&#xa;//&#x9;if(buffer_empty)&#x9;&#x9;cmd_valid &lt;= #1 0;&#x9;//如果buffer空了就读取无效&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    &#xa;r_rx_done &lt;= bus_rx_done;&#xa;end&#xa;&#xa;always@(posedge Clk or negedge Rst_n)&#x9;//复位全部置为0&#xa;if(!Rst_n) &#xa;    begin&#xa;//&#x9;&#x9;buffer_rd &lt;=  0;&#x9;//初始时刻，请求读取&#xa;    motor_reg_address &lt;= #1 0;&#xa;    arm_id &lt;= #1 0;&#xa;    arm_cmd &lt;= #1 0;&#xa;    motor_cmd_data&lt;= #1 0;&#xa;    cmd_valid &lt;= #1 0;&#xa;    motor_num_cmd &lt;= #1 0;&#x9;&#xa;    //跳舞的初始化&#xa;    dance_length &lt;= 5'd19;&#xa;    cmd_flag &lt;= 2'd0;&#xa;    cnt_l &lt;= 8'h0;&#xa;    cnt_m &lt;= 8'h0;&#xa;    cnt_h &lt;= 8'h0;&#xa;    cnt_e &lt;= 4'h00;&#x9;&#x9;&#x9;&#x9;&#xa;    end &#xa;else &#xa;    begin&#xa;    arm_id &lt;= 0;    &#xa;    cmd_valid &lt;= #1 0;&#xa;    if(dance_valid != 0)//跳舞&#xa;        begin&#xa;        case (cmd_flag)&#xa;            2'd0://发送停指令&#xa;                begin&#xa;                    arm_id&lt;=0;&#xa;                    arm_cmd &lt;= 0;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;                    motor_id &lt;= #1 8'h68;&#xa;                    motor_reg_address &lt;= #1 8'h33;  //第五个字节&#xa;                    motor_cmd_data&lt;= #1 {8'h0,8'h0,8'h0,8'h0};&#xa;                    motor_num_cmd &lt;= #1 8'h4;&#xa;                    cmd_valid &lt;= #1 1;&#xa;                    cnt_l &lt;= 8'hff;&#xa;                    cnt_m &lt;= 8'h80;&#xa;                    cnt_h &lt;= 8'h0;&#xa;                    cnt_e &lt;= 4'h0;&#xa;                    cmd_flag &lt;= 2'd1;&#xa;                end&#xa;            2'd1://等待1ms&#xa;                begin&#xa;                if (cnt_l == 8'h00)&#xa;                    begin&#xa;                    if (cnt_m == 8'h00)&#xa;                        cmd_flag &lt;= 2'd2;&#xa;                    else&#xa;                        begin&#xa;                        cnt_m &lt;= cnt_m -8'h1;&#xa;                        cnt_l &lt;= 8'hff;&#xa;                        end&#xa;                    end&#xa;                else&#xa;                    cnt_l &lt;= cnt_l -8'd1;&#xa;                end&#xa;            2'd2://发送指令集&#xa;                    begin&#xa;                    dance_length &lt;= dance_length -5'd1;&#xa;                    cnt_l &lt;= 8'hff;&#xa;                    cnt_m &lt;= 8'hff;&#xa;                    cnt_h &lt;= 8'hff;&#xa;                    cnt_e &lt;= 4'h01; &#xa;                    case (dance_length)&#xa;                        5'd18://左回&#xa;                            begin&#xa;                            arm_id &lt;=  8'h08;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h0,8'h0,8'h0,8'h0};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;                        5'd17://左前&#xa;                            begin&#xa;                            arm_id &lt;=  8'h09;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'hf6, 8'hf6, 8'hf6, 8'hf6};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;                        5'd16://左回&#xa;                            begin&#xa;                            arm_id &lt;=  8'h08;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= #1 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h0a, 8'h0a, 8'h0a, 8'h0a};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;                        5'd15://左前&#xa;                            begin&#xa;                            arm_id &lt;=  8'h09;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'hf6, 8'hf6, 8'hf6, 8'hf6};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;                        5'd14://左回&#xa;                            begin&#xa;                            arm_id &lt;=  8'h08;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h0a, 8'h0a, 8'h0a, 8'h0a};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;//////////////////////////////////////////////////&#xa;                        5'd12://右回&#xa;                            begin&#xa;                            arm_id &lt;=  8'h08;&#xa;                            arm_cmd &lt;= 1;&#xa;                            motor_id &lt;= 8'h68; &#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h00, 8'h00, 8'h00, 8'h00};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;                        5'd11://右前&#xa;                            begin&#xa;                            arm_id &lt;=  8'h09;&#xa;                            arm_cmd &lt;= 1;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h0a, 8'h0a, 8'h0a, 8'h0a};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;                        5'd10://右回&#xa;                            begin&#xa;                            arm_id &lt;=  8'h08;&#xa;                            arm_cmd &lt;= 1;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'hf6, 8'hf6, 8'hf6, 8'hf6};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;                        5'd9://右前&#xa;                            begin&#xa;                            arm_id &lt;=  8'h09;&#xa;                            arm_cmd &lt;= 1;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h0a, 8'h0a, 8'h0a, 8'h0a};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;                        5'd8://右回&#xa;                            begin&#xa;                            arm_id &lt;=  8'h08;&#xa;                            arm_cmd &lt;= 1;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'hf6, 8'hf6, 8'hf6, 8'hf6};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;////////////////////////////////////////////////                          &#xa;                        5'd6://左扭&#xa;                            begin&#xa;                            arm_id &lt;=  8'h00;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'hf6, 8'h0a, 8'hf6, 8'h0a};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            cnt_e &lt;= 4'h00;&#xa;                            end&#xa;                        5'd5://右扭&#xa;                            begin&#xa;                            arm_id &lt;=  8'h00;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h0a, 8'hf6, 8'h0a, 8'hf6};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            cnt_e &lt;= 4'h00;&#xa;                            end&#xa;                        5'd4://左扭&#xa;                            begin&#xa;                            arm_id &lt;=  8'h00;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'hf6, 8'h0a, 8'hf6, 8'h0a};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            cnt_e &lt;= 4'h00;&#xa;                            end&#xa;                        5'd3://右扭&#xa;                            begin&#xa;                            arm_id &lt;=  8'h00;&#xa;                            arm_cmd &lt;= 0;&#xa;                            motor_id &lt;= 8'h68;&#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h0a, 8'hf6, 8'h0a, 8'hf6};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            cnt_e &lt;= 4'h00;&#xa;                            end    &#xa;/////////////////////////////////////////////// &#xa;                        5'd1://鞠躬&#xa;                            begin&#xa;                            arm_id &lt;= 8'd10;&#xa;                            arm_cmd &lt;= 1;&#xa;                            motor_id &lt;= 8'h68; &#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h00, 8'h00, 8'h00, 8'h00};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;&#xa;                            end&#xa;///////////////////////////////////////////////&#xa;                        default://一步竖直&#xa;                            begin&#xa;                            arm_id &lt;= 8'h07;&#xa;                            arm_cmd &lt;= 0;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;                            motor_id &lt;= 8'h68; &#xa;                            motor_reg_address &lt;= 8'h33;  //第五个字节&#xa;                            motor_cmd_data&lt;= {8'h00, 8'h00, 8'h00, 8'h00};&#xa;                            motor_num_cmd &lt;= 8'h04;&#xa;                            cmd_valid &lt;= #1 1;               &#xa;                            end&#xa;                    endcase    &#xa;                    &#xa;                    cmd_flag &lt;= 2'd3;            &#xa;                    end&#xa;            2'd3://等待1s&#xa;                begin&#xa;                if (cnt_l == 8'h00)&#xa;                    begin&#xa;                    if (cnt_m == 8'h00)&#xa;                        begin&#xa;                        if(cnt_h == 8'h00)&#xa;                            begin//判断是否发送完毕&#xa;                            if(cnt_e == 4'h00)&#xa;                                begin&#xa;                                cmd_flag &lt;= 2'h00;&#xa;                                if(dance_length == 5'd31)&#xa;                                    dance_valid &lt;= 1'd0;&#xa;                                end   &#xa;                            else&#xa;                                cnt_e &lt;= cnt_e -4'h01;&#xa;                                cnt_h &lt;= 8'hff;&#xa;                            end&#xa;                        else&#xa;                            begin&#xa;                            cnt_h &lt;= cnt_h - 8'h01;&#xa;                            cnt_m &lt;= 8'hff;&#xa;                            end&#xa;                        end&#xa;                    else&#xa;                        begin&#xa;                        cnt_m &lt;= cnt_m -8'h01;&#xa;                        cnt_l &lt;= 8'hff;&#xa;                        end&#xa;                    end&#xa;                else&#xa;                    cnt_l &lt;= cnt_l -8'h01;&#xa;                end&#xa;        endcase&#xa;        end&#xa;    if(r_rx_done)&#xa;       begin&#x9;&#x9;&#x9;//串口数据包全部收到了，开始解析命令&#xa;        if((data_str[0] == 8'h55) &amp;&amp; (data_str[1] == 8'hA5) &amp;&amp; (data_str[9] == 8'hF0))&#xa;            begin&#xa;                if(data_str[2] == 8'h00)&#x9;&#x9;//表示操作机械臂&#xa;                    begin&#xa;                    if(data_str[4][7:4] == 8'h0f)//跳舞&#xa;                        begin&#xa;                        arm_id&lt;=0;&#xa;                        arm_cmd &lt;= 0;&#xa;                        motor_id &lt;= 0;&#xa;                        motor_reg_address &lt;= 0;  //第五个字节&#xa;                        motor_cmd_data&lt;= 0;&#xa;                        motor_num_cmd &lt;= 0;&#xa;                        cmd_valid &lt;= #1 0;&#xa;                        &#xa;                        dance_valid &lt;= #1 1;&#xa;                        cmd_flag &lt;= 2'd0;&#xa;                        dance_length &lt;= 5'd19;&#xa;                        cnt_l &lt;= 8'h0;&#xa;                        cnt_m &lt;= 8'h0;&#xa;                        cnt_h &lt;= 8'd0;&#xa;                        cnt_e &lt;= 4'h0;&#xa;                        end&#xa;//                    else if(data_str[4][7:5] == 8'h07)&#xa;//                        begin&#xa;//                        arm_id &lt;= 8'h0a;&#x9;&#x9;//第五个字节高三位&#xa;//                        arm_cmd &lt;= data_str[4][0];&#xa;//                        motor_id &lt;= 0;&#xa;//                        motor_reg_address &lt;= 0;  //第五个字节&#xa;//                        motor_cmd_data&lt;= 0;&#xa;//                        motor_num_cmd &lt;= 0;&#xa;//                        cmd_valid &lt;= #1 0;&#xa;//                        dance_valid &lt;= 0;&#xa;//                        end&#xa;                    else&#xa;                        begin&#xa;                        arm_id &lt;= data_str[4][7:4];&#x9;&#x9;//第五个字节高三位&#xa;                        arm_cmd &lt;= data_str[4][0];&#xa;                        motor_id &lt;= 0;&#xa;                        motor_reg_address &lt;= 0;  //第五个字节&#xa;                        motor_cmd_data&lt;= 0;&#xa;                        motor_num_cmd &lt;= 0;&#xa;                        cmd_valid &lt;= #1 0;&#xa;                        dance_valid &lt;= 0;&#xa;                        end&#xa;                    end&#xa;                else if(data_str[2] == 8'h68)&#x9;//表示操作电机&#xa;                    begin&#xa;                    arm_id&lt;=0;&#xa;                    arm_cmd &lt;= 0;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;                    motor_id &lt;= #1 8'h68;&#xa;                    motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                    motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                    motor_num_cmd &lt;= #1 data_str[3];&#xa;                    cmd_valid &lt;= #1 1;&#xa;                    dance_valid &lt;= #1 0;&#xa;                    end&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;    &#xa;                else &#xa;                    begin&#xa;                    arm_id&lt;=0;&#xa;                    arm_cmd &lt;= 0;&#xa;                    motor_id &lt;= 0;&#xa;                    motor_reg_address &lt;= 0;  //第五个字节&#xa;                    motor_cmd_data&lt;= 0;&#xa;                    motor_num_cmd &lt;= 0;&#xa;                    cmd_valid &lt;= #1 0;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;                    end&#xa;            end&#xa;        end&#xa;    end  &#xa;//跳舞&#x9;&#xa;/*&#x9;&#x9;&#x9;    &#xa;always@(posedge Clk or negedge Rst_n)&#xa;    //15条指令集&#xa;        begin&#xa;        if(!Rst_n) &#xa;&#x9;&#x9;&#x9;begin&#xa;            dance_length &lt;= 5'd15;&#xa;            cmd_flag &lt;= 2'd0;&#xa;            cnt_l &lt;= 8'h0;&#xa;            cnt_m &lt;= 8'h0;&#xa;            cnt_h &lt;= 9'd0;&#xa;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;else if(dance_valid != 0)&#xa;            begin&#xa;            case (cmd_flag)&#xa;                2'd0://发送停指令&#xa;                    begin&#xa;                        arm_id&lt;=0;&#xa;                        arm_cmd &lt;= 0;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;                        motor_id &lt;= #1 8'h68;&#xa;                        motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                        motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                        motor_num_cmd &lt;= #1 data_str[3];&#xa;                        cmd_valid &lt;= #1 1;&#xa;                        cnt_l &lt;= 8'hff;&#xa;                        cnt_m &lt;= 8'h80;&#xa;                        cnt_h &lt;= 9'd0;&#xa;                        cmd_flag &lt;= 2'd1;&#xa;                    end&#xa;                2'd1://等待1ms&#xa;                    begin&#xa;                    if (cnt_l == 8'h00)&#xa;                        begin&#xa;                        if (cnt_m == 8'h00)&#xa;                            cmd_flag &lt;= 2'd2;&#xa;                        else&#xa;                            begin&#xa;                            cnt_m &lt;= cnt_m -8'h1;&#xa;                            cnt_l &lt;= 8'hff;&#xa;                            end&#xa;                        end&#xa;                    else&#xa;                        cnt_l &lt;= cnt_l -8'd1;&#xa;                    end&#xa;                2'd2://发送指令集&#xa;                        begin&#xa;                        dance_length &lt;= dance_length -1;&#xa;                        case (dance_length)&#xa;                            5'd14://左回&#xa;                                begin&#xa;                                arm_id &lt;=  8'd8;&#xa;                                arm_cmd &lt;= 0;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;                            5'd14://左前&#xa;                                begin&#xa;                                arm_id &lt;=  8'd9;&#xa;                                arm_cmd &lt;= 0;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;                            5'd13://左回&#xa;                                begin&#xa;                                arm_id &lt;=  8'd8;&#xa;                                arm_cmd &lt;= 0;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;                            5'd12://左前&#xa;                                begin&#xa;                                arm_id &lt;=  8'd9;&#xa;                                arm_cmd &lt;= 0;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;                            5'd11://左回&#xa;                                begin&#xa;                                arm_id &lt;=  8'd8;&#xa;                                arm_cmd &lt;= 0;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;//////////////////////////////////////////////////&#xa;                            5'd9://右回&#xa;                                begin&#xa;                                arm_id &lt;=  8'd8;&#xa;                                arm_cmd &lt;= 1;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;                            5'd8://右前&#xa;                                begin&#xa;                                arm_id &lt;=  8'd9;&#xa;                                arm_cmd &lt;= 1;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;                            5'd7://右回&#xa;                                begin&#xa;                                arm_id &lt;=  8'd8;&#xa;                                arm_cmd &lt;= 1;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;                            5'd6://右前&#xa;                                begin&#xa;                                arm_id &lt;=  8'd9;&#xa;                                arm_cmd &lt;= 1;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;                            5'd5://右回&#xa;                                begin&#xa;                                arm_id &lt;=  8'd8;&#xa;                                arm_cmd &lt;= 1;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;////////////////////////////////////////////////                          &#xa;                            5'd3://原地旋转&#xa;                                begin&#xa;                                arm_id &lt;=  8'd0;&#xa;                                arm_cmd &lt;= 0;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;/////////////////////////////////////////////// &#xa;                            5'd2://鞠躬&#xa;                                begin&#xa;                                arm_id &lt;= 8'd10;&#xa;                                arm_cmd &lt;= 1;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;&#xa;                                end&#xa;///////////////////////////////////////////////&#xa;                            default://一步竖直&#xa;                                begin&#xa;                                arm_id &lt;= 8'd7;&#xa;                                arm_cmd &lt;= 0;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;                                motor_id &lt;= #1 8'h68;&#xa;                                motor_reg_address &lt;= #1 data_str[4];  //第五个字节&#xa;                                motor_cmd_data&lt;= #1 {data_str[5],data_str[6],data_str[7],data_str[8]};&#xa;                                motor_num_cmd &lt;= #1 data_str[3];&#xa;                                cmd_valid &lt;= #1 1;               &#xa;                                end&#xa;                        endcase    &#xa;                        cnt_l &lt;= 8'hff;&#xa;                        cnt_m &lt;= 8'hff;&#xa;                        cnt_h &lt;= 9'd503; &#xa;                        cmd_flag &lt;= 2'd3;            &#xa;                        end&#xa;                2'd3://等待1s&#xa;                    begin&#xa;                    if (cnt_l == 8'h00)&#xa;                        begin&#xa;                        if (cnt_m == 8'h00)&#xa;                            begin&#xa;                            if(cnt_h == 9'h00)&#xa;                                begin//判断是否发送完毕&#xa;                                cmd_flag &lt;= 2'h0;&#xa;                                if(dance_length == 5'd0)&#xa;                                    dance_valid &lt;= 1'd0;&#xa;                                end&#xa;                            else&#xa;                                begin&#xa;                                cnt_h &lt;= cnt_h - 8'h1;&#xa;                                cnt_m &lt;= 8'hff;&#xa;                                end&#xa;                            end&#xa;                        else&#xa;                            begin&#xa;                            cnt_m &lt;= cnt_m -8'h1;&#xa;                            cnt_l &lt;= 8'hff;&#xa;                            end&#xa;                        end&#xa;                    else&#xa;                        cnt_l &lt;= cnt_l -8'd1;&#xa;                    end&#xa;            endcase&#xa;            end&#xa;        end&#xa;*/" File="Current/Bus_arm_motor.model" Parameters="" Class="module" Comment="" Parent="0" Include="">
 <Port Function="" Height="20" X="-0.0222222" Y="0.15" Color="#faebd7" Name="Clk" Width="20" Inout="input" Datasize="1" Side="left" Datatype="wire" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="-0.0222222" Y="0.316667" Color="#00ffff" Name="Rst_n" Width="20" Inout="input" Datasize="1" Side="left" Datatype="wire" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="-0.0222222" Y="0.483333" Color="#7fffd4" Name="instruction_data" Width="20" Inout="input" Datasize="8" Side="left" Datatype="wire" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="0.977778" Y="0.0933333" Color="#f5f5dc" Name="cmd_valid" Width="20" Inout="output" Datasize="1" Side="right" Datatype="reg" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="0.977778" Y="0.203333" Color="#ffe4c4" Name="arm_id" Width="20" Inout="output" Datasize="8" Side="right" Datatype="reg" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="0.977778" Y="0.313333" Color="#b8860b" Name="arm_cmd" Width="20" Inout="output" Datasize="1" Side="right" Datatype="reg" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="0.977778" Y="0.423333" Color="#ffebcd" Name="motor_reg_address" Width="20" Inout="output" Datasize="8" Side="right" Datatype="reg" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="0.977778" Y="0.533333" Color="#0000ff" Name="motor_cmd_data" Width="20" Inout="output" Datasize="32" Side="right" Datatype="reg" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="0.977778" Y="0.643333" Color="#8a2be2" Name="motor_num_cmd" Width="20" Inout="output" Datasize="8" Side="right" Datatype="reg" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="0.977778" Y="0.753333" Color="#deb887" Name="motor_id" Width="20" Inout="output" Datasize="8" Side="right" Datatype="reg" Parent="Bus_arm_motor"/>
 <Port Function="" Height="20" X="-0.0222222" Y="0.65" Color="#5f9ea0" Name="bus_rx_done" Width="20" Inout="input" Datasize="1" Side="left" Datatype="wire" Parent="Bus_arm_motor"/>
</Module>
