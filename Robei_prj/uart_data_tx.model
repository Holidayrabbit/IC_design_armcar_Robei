<!DOCTYPE Robei>
<Module Type="module" Include="" Code="&#xa;&#x9;&#x9;parameter DATA_WIDTH = 80;&#xa;&#x9;&#x9;parameter MSB_FIRST = 1;&#xa;&#x9;&#xa;&#x9;&#x9;reg [DATA_WIDTH-1 : 0]data_r;         //这里得改&#xa;&#x9;&#xa;&#x9;&#x9;reg [7:0] data_byte;&#xa;&#x9;&#x9;reg byte_send_en;&#xa;&#x9;&#x9;wire byte_tx_done;&#xa;&#x9;&#xa;&#x9;&#x9;reg [8:0]cnt;&#xa;&#x9;&#x9;reg [1:0]state;&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;localparam S0 = 0;&#x9;//等待发送请求&#xa;&#x9;&#x9;localparam S1 = 1;&#x9;//发起单字节数据发送&#xa;&#x9;&#x9;localparam S2 = 2;&#x9;//等待单字节数据发送完成&#xa;&#x9;&#x9;localparam S3 = 3;&#x9;//检查所有数据是否发送完成&#xa;&#x9;&#x9;&#xa;&#x9;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;&#x9;if(!Rst_n)begin&#xa;&#x9;&#x9;&#x9;data_byte &lt;= 0;&#xa;&#x9;&#x9;&#x9;byte_send_en &lt;= 0;&#xa;&#x9;&#x9;&#x9;state &lt;= S0;&#xa;&#x9;&#x9;&#x9;cnt &lt;= 0;&#xa;&#x9;&#x9;end&#xa;&#x9;&#x9;else begin&#xa;&#x9;&#x9;&#x9;case(state)&#xa;&#x9;&#x9;&#x9;&#x9;S0: &#xa;&#x9;&#x9;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data_byte &lt;= 0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cnt &lt;= 0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tx_Done &lt;= 0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(send_en)begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= S1;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data_r &lt;= data;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= S0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data_r &lt;= data_r;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;S1:&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;byte_send_en &lt;= 1;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(MSB_FIRST == 1)begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data_byte &lt;= data_r[DATA_WIDTH-1:DATA_WIDTH - 8];&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data_r &lt;= data_r &lt;&lt; 8;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data_byte &lt;= data_r[7:0];&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;data_r &lt;= data_r >> 8;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= S2;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;S2:&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;byte_send_en &lt;= 0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if(byte_tx_done)begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= S3;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cnt &lt;= cnt + 9'd8;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= S2;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;&#x9;&#x9;S3:&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;if(cnt >= DATA_WIDTH)begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= S0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;cnt &lt;= 0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tx_Done &lt;= 1;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;else begin&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;state &lt;= S1;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;Tx_Done &lt;= 0;&#xa;&#x9;&#x9;&#x9;&#x9;&#x9;end&#xa;&#x9;&#x9;&#x9;&#x9;default:state &lt;= S0;&#xa;&#x9;&#x9;&#x9;endcase&#x9;&#xa;&#x9;&#x9;end&#xa;&#x9;&#xa;&#x9;&#xa;&#x9;&#xa;&#xa;&#xa;&#xa;&#xa;" Name="uart_data_tx" Parent="0" Y="0" File="Current/uart_data_tx.model" Class="module" Color="#d3d3d3" Width="900" Height="600" X="0" Comment="" Parameters="">
 <Module Type="model" Include="" Code="&#x9;localparam START_BIT = 1'b0;&#xa;&#x9;localparam STOP_BIT = 1'b1; &#xa;&#x9;&#xa;&#x9;reg bps_clk;&#x9;     //波特率时钟&#x9;&#xa;&#x9;reg [15:0]div_cnt;      //分频计数器&#x9;&#xa;&#x9;reg [15:0]bps_DR;       //分频计数最大值&#x9;&#xa;&#x9;reg [3:0]bps_cnt;      //波特率时钟计数器&#x9;&#xa;&#x9;reg [7:0]data_byte_reg;//data_byte寄存后数据&#xa;&#x9;&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)&#xa;&#x9;&#x9;uart_state &lt;= 1'b0;&#xa;&#x9;else if(send_en)&#xa;&#x9;&#x9;uart_state &lt;= 1'b1;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;uart_state &lt;= 1'b0;&#xa;&#x9;else&#xa;&#x9;&#x9;uart_state &lt;= uart_state;&#xa;&#x9;&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)&#xa;&#x9;&#x9;data_byte_reg &lt;= 8'd0;&#xa;&#x9;else if(send_en)&#xa;&#x9;&#x9;data_byte_reg &lt;= data_byte;&#xa;&#x9;else&#xa;&#x9;&#x9;data_byte_reg &lt;= data_byte_reg;&#xa;&#x9;&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)&#xa;&#x9;&#x9;bps_DR &lt;= 16'd5207;&#xa;&#x9;else begin&#xa;&#x9;&#x9;case(Baud_Set)&#xa;&#x9;&#x9;&#x9;0:bps_DR &lt;= 16'd5207;&#xa;&#x9;&#x9;&#x9;1:bps_DR &lt;= 16'd2603;&#xa;&#x9;&#x9;&#x9;2:bps_DR &lt;= 16'd1301;&#xa;&#x9;&#x9;&#x9;3:bps_DR &lt;= 16'd867;&#xa;&#x9;&#x9;&#x9;4:bps_DR &lt;= 16'd433;&#xa;&#x9;&#x9;&#x9;default:bps_DR &lt;= 16'd5207;&#x9;&#x9;&#x9;&#xa;&#x9;&#x9;endcase&#xa;&#x9;end&#x9;&#xa;&#x9;&#xa;&#x9;//counter&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)&#xa;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;else if(uart_state)begin&#xa;&#x9;&#x9;if(div_cnt == bps_DR)&#xa;&#x9;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;&#x9;else&#xa;&#x9;&#x9;&#x9;div_cnt &lt;= div_cnt + 1'b1;&#xa;&#x9;end&#xa;&#x9;else&#xa;&#x9;&#x9;div_cnt &lt;= 16'd0;&#xa;&#x9;&#xa;&#x9;// bps_clk gen&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)&#xa;&#x9;&#x9;bps_clk &lt;= 1'b0;&#xa;&#x9;else if(div_cnt == 16'd1)&#xa;&#x9;&#x9;bps_clk &lt;= 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;bps_clk &lt;= 1'b0;&#xa;&#x9;&#xa;&#x9;//bps counter&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)&#x9;&#xa;&#x9;&#x9;bps_cnt &lt;= 4'd0;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;bps_cnt &lt;= 4'd0;&#xa;&#x9;else if(bps_clk)&#xa;&#x9;&#x9;bps_cnt &lt;= bps_cnt + 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;bps_cnt &lt;= bps_cnt;&#xa;&#x9;&#x9;&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)&#xa;&#x9;&#x9;Tx_Done &lt;= 1'b0;&#xa;&#x9;else if(bps_cnt == 4'd11)&#xa;&#x9;&#x9;Tx_Done &lt;= 1'b1;&#xa;&#x9;else&#xa;&#x9;&#x9;Tx_Done &lt;= 1'b0;&#xa;&#x9;&#x9;&#xa;&#x9;always@(posedge Clk or negedge Rst_n)&#xa;&#x9;if(!Rst_n)&#xa;&#x9;&#x9;uart_tx &lt;= 1'b1;&#xa;&#x9;else begin&#xa;&#x9;&#x9;case(bps_cnt)&#xa;&#x9;&#x9;&#x9;0:uart_tx &lt;= 1'b1;&#xa;&#x9;&#x9;&#x9;1:uart_tx &lt;= START_BIT;&#xa;&#x9;&#x9;&#x9;2:uart_tx &lt;= data_byte_reg[0];&#xa;&#x9;&#x9;&#x9;3:uart_tx &lt;= data_byte_reg[1];&#xa;&#x9;&#x9;&#x9;4:uart_tx &lt;= data_byte_reg[2];&#xa;&#x9;&#x9;&#x9;5:uart_tx &lt;= data_byte_reg[3];&#xa;&#x9;&#x9;&#x9;6:uart_tx &lt;= data_byte_reg[4];&#xa;&#x9;&#x9;&#x9;7:uart_tx &lt;= data_byte_reg[5];&#xa;&#x9;&#x9;&#x9;8:uart_tx &lt;= data_byte_reg[6];&#xa;&#x9;&#x9;&#x9;9:uart_tx &lt;= data_byte_reg[7];&#xa;&#x9;&#x9;&#x9;10:uart_tx &lt;= STOP_BIT;&#xa;&#x9;&#x9;&#x9;default:uart_tx &lt;= 1'b1;&#xa;&#x9;&#x9;endcase&#xa;&#x9;end&#x9;&#xa;&#xa;&#xa;&#xa;&#xa;" Name="uart_byte_tx1" Parent="uart_data_tx" Y="274.613" File="Current/uart_byte_tx.model" Class="uart_byte_tx" Color="#d3d3d3" Width="160" Height="160" X="341.945" Comment="" Parameters="">
  <Port Side="left" Name="Clk" Parent="uart_byte_tx1" Connect="" Y="0.075" Datasize="1" Datatype="wire" Inout="input" Color="#faebd7" Width="20" Function="" Height="20" X="-0.125"/>
  <Port Side="left" Name="Rst_n" Parent="uart_byte_tx1" Connect="" Y="0.2125" Datasize="1" Datatype="wire" Inout="input" Color="#00ffff" Width="20" Function="" Height="20" X="-0.125"/>
  <Port Side="left" Name="data_byte" Parent="uart_byte_tx1" Connect="data_byte" Y="0.35" Datasize="8" Datatype="wire" Inout="input" Color="#7fffd4" Width="20" Function="" Height="20" X="-0.125"/>
  <Port Side="left" Name="send_en" Parent="uart_byte_tx1" Connect="byte_send_en" Y="0.4875" Datasize="1" Datatype="wire" Inout="input" Color="#f0ffff" Width="20" Function="" Height="20" X="-0.125"/>
  <Port Side="left" Name="Baud_Set" Parent="uart_byte_tx1" Connect="" Y="0.625" Datasize="3" Datatype="wire" Inout="input" Color="#f5f5dc" Width="20" Function="" Height="20" X="-0.125"/>
  <Port Side="right" Name="uart_tx" Parent="uart_byte_tx1" Connect="" Y="0.1375" Datasize="1" Datatype="reg" Inout="output" Color="#ffe4c4" Width="20" Function="" Height="20" X="0.875"/>
  <Port Side="right" Name="Tx_Done" Parent="uart_byte_tx1" Connect="byte_tx_done" Y="0.3375" Datasize="1" Datatype="reg" Inout="output" Color="#b8860b" Width="20" Function="" Height="20" X="0.875"/>
  <Port Side="right" Name="uart_state" Parent="uart_byte_tx1" Connect="" Y="0.5375" Datasize="1" Datatype="reg" Inout="output" Color="#ffebcd" Width="20" Function="" Height="20" X="0.875"/>
 </Module>
 <Port Side="left" Name="Clk" Parent="uart_data_tx" Y="0.125" Datasize="1" Datatype="wire" Inout="input" Color="#faebd7" Width="20" Function="" Height="20" X="-0.0222222"/>
 <Port Side="left" Name="Rst_n" Parent="uart_data_tx" Y="0.266667" Datasize="1" Datatype="wire" Inout="input" Color="#00ffff" Width="20" Function="" Height="20" X="-0.0222222"/>
 <Port Side="left" Name="data" Parent="uart_data_tx" Y="0.408333" Datasize="DATA_WIDTH - 1 : 0" Datatype="wire" Inout="input" Color="#7fffd4" Width="20" Function="" Height="20" X="-0.0222222"/>
 <Port Side="left" Name="send_en" Parent="uart_data_tx" Y="0.55" Datasize="1" Datatype="wire" Inout="input" Color="#f0ffff" Width="20" Function="" Height="20" X="-0.0222222"/>
 <Port Side="left" Name="Baud_Set" Parent="uart_data_tx" Y="0.691667" Datasize="3" Datatype="wire" Inout="input" Color="#f5f5dc" Width="20" Function="" Height="20" X="-0.0222222"/>
 <Port Side="right" Name="uart_tx" Parent="uart_data_tx" Y="0.183333" Datasize="1" Datatype="wire" Inout="output" Color="#ffe4c4" Width="20" Function="" Height="20" X="0.977778"/>
 <Port Side="right" Name="Tx_Done" Parent="uart_data_tx" Y="0.383333" Datasize="1" Datatype="reg" Inout="output" Color="#b8860b" Width="20" Function="" Height="20" X="0.977778"/>
 <Port Side="right" Name="uart_state" Parent="uart_data_tx" Y="0.583333" Datasize="1" Datatype="wire" Inout="output" Color="#ffebcd" Width="20" Function="" Height="20" X="0.977778"/>
 <Wire Name="uart_data_tx_Clk" Parent="uart_data_tx" Datasize="1" To="uart_data_tx#uart_byte_tx1>Clk" Datatype="wire" From="uart_data_tx>Clk"/>
 <Wire Name="uart_data_tx_Rst_n" Parent="uart_data_tx" Datasize="1" To="uart_data_tx#uart_byte_tx1>Rst_n" Datatype="wire" From="uart_data_tx>Rst_n"/>
 <Wire Name="uart_data_tx_Baud_Set" Parent="uart_data_tx" Datasize="3" To="uart_data_tx#uart_byte_tx1>Baud_Set" Datatype="wire" From="uart_data_tx>Baud_Set"/>
 <Wire Name="uart_byte_tx1_uart_tx" Parent="uart_data_tx" Datasize="1" To="uart_data_tx>uart_tx" Datatype="wire" From="uart_data_tx#uart_byte_tx1>uart_tx"/>
 <Wire Name="uart_byte_tx1_uart_state" Parent="uart_data_tx" Datasize="1" To="uart_data_tx>uart_state" Datatype="wire" From="uart_data_tx#uart_byte_tx1>uart_state"/>
</Module>
